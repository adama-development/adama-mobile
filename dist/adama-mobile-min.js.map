{"version":3,"sources":["app.js","app-config.js","auth/accessDenied.controller.js","auth/app.js","auth/recoverPassword.controller.js","auth/signin.controller.js","jhipster/alert.directive.js","jhipster/alert.service.js","resources/user.resource.js","services/adama-constant.constant.js","services/adama-resource-config.service.js","services/adama-token.service.js","services/auth.service.js","services/binary-file.service.js","services/language.provider.js","services/page-title.service.js","services/parse-links.service.js","services/principal.service.js","btn-signout/app.js","btn-signout/btn-signout.directive.js","datasources/binary-file-url.datasource.js","datasources/language.datasource.js","datasources/principal-identity.datasource.js","interceptors/auth-expired.interceptor.js","interceptors/auth.interceptor.js"],"names":["angular","module","run","$ionicPlatform","ready","window","cordova","plugins","Keyboard","hideKeyboardAccessoryBar","disableScroll","StatusBar","styleDefault","config","$urlRouterProvider","otherwise","$translateProvider","useSanitizeValueStrategy","useLocalStorage","registerAvailableLanguageKeys","en_*","fr_*","determinePreferredLanguage","fallbackLanguage","$stateProvider","adamaConstant","state","abstract","url","templateUrl","adamaMobileToolkitTemplateUrl","app","$rootScope","pageTitle","$on","event","toState","data","set","$httpProvider","interceptors","push","$state","principalService","authorities","length","isAuthenticated","hasAnyAuthority","go","toParams","fromState","fromParams","error","$injector","$cordovaBadge","enableBadge","get","on","clear","$ionicPush","$ionicUser","enablePush","init","debug","onNotification","notification","$apply","payload","getPayload","console","log","asleep","closed","onRegister","token","canShowAlert","canSetBadge","canPlaySound","canRunActionsOnWake","current","register","unregister","controller","template","authSignin","controllerAs","authRecover","authAccessDenied","translations","SIGNIN","SIGNIN_INTRO","SIGNIN_FORGET_PASSWORD","SIGNIN_USERNAME","SIGNIN_USERNAME_REQUIRED","SIGNIN_PASSWORD","SIGNIN_PASSWORD_REQUIRED","SIGNIN_SUBMIT","SIGNIN_ERROR_TITLE","SIGNIN_ERROR_MESSAGE","RECOVER","RECOVER_INTRO","RECOVER_MAIL","RECOVER_MAIL_REQUIRED","RECOVER_MAIL_EMAIL","RECOVER_SUBMIT","RECOVER_BACK_TO_LOGIN","RECOVER_SUCCESS","RECOVER_ERROR_TITLE","RECOVER_ERROR_GENERIC","RECOVER_ERROR_EMAIL_NOT_EXIST","ACCESS_DENIED_BACK_TO_HOME","ACCESS_DENIED","ACCESS_DENIED_INTRO","$filter","$ionicPopup","ctrl","this","recover","userEmail","recoverSuccess","recoverError","errorEmailNotExists","loading","resetPasswordInit","then","response","messageKey","status","translateFn","alert","title","authService","signin","userName","userPassword","login","rejection","directive","AlertService","restrict","$scope","alerts","$translate","addErrorAlert","message","key","add","type","msg","params","timeout","toast","isToast","scoped","cleanHttpErrorListener","appModule","httpResponse","i","stopPropagation","errorHeader","headers","entityKey","entityName","instant","fieldErrors","fieldError","convertedField","field","replace","fieldName","objectName","JSON","stringify","undefined","provider","$get","$timeout","$sce","alertId","closeAlertByIndex","index","thisAlerts","splice","closeAlert","id","extAlerts","map","e","indexOf","factory","alertOptions","trustAsHtml","position","close","addAlert","success","warning","info","showAsToast","$resource","adamaResourceConfig","extend","delete","method","apiBase","constant","urlResetPassword","ParseLinks","query","isArray","transformResponse","fromJson","$metadata","links","parse","totalItems","interceptor","resource","save","update","$http","$q","jwtHelper","api","ionicUser","getToken","isTokenExpired","refreshAndGetToken","when","refreshToken","Authorization","refresh_token","newToken","$ionicAuth","username","password","authOptions","remember","externalId","resetPrincipal","logout","deletePrincipal","initUrlForBinaryFiles","binaryFileList","workingList","idList","forEach","binaryFile","languages","selectorData","code","labelKey","cssCLass","setLanguages","newLanguages","setSelectorData","newSelectorData","getCurrent","language","storage","isUndefined","getAll","getSelectorData","pageTitleKey","newTitle","service","header","Error","parts","split","p","section","trim","queryString","RegExp","$0","$1","$2","$3","page","isString","parseInt","name","principalPromise","reject","accountResource","passwordResource","passwordResetInitResource","principal","$broadcast","getPrincipal","authorize","mail","$promise","updateAccount","$emit","changePassword","newPassword","BTN_SIGNOUT","component","signout","$parse","binaryFileService","scope","link","element","attrs","updateOutput","output","copy","assign","$watch","input","getHttpService","getAdamaTokenService","responseError","request"],"mappings":"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","file":"adama-mobile-min.js","sourcesContent":["'use strict';\n\nangular.module('adama-mobile', [ //\n\t'ionic', //\n\t'ionic.service.core', //\n\t'ionic.service.auth', //\n\t'ionic.service.deploy', //\n\t'ionic.service.push', //\n\t'pascalprecht.translate', //\n\t'ngCookies', //\n\t'ngResource', //\n\t'LocalStorageModule', //\n\t'ngCordova', //\n\t'angular-jwt', //\n\t'ngMessages' //\n]);\n","/* globals StatusBar:false, cordova: false */\n\n'use strict';\n\nangular.module('adama-mobile').run([\"$ionicPlatform\", function($ionicPlatform) {\n\t$ionicPlatform.ready(function() {\n\t\tif (window.cordova && window.cordova.plugins.Keyboard) {\n\t\t\t// Hide the accessory bar by default (remove this to show the\n\t\t\t// accessory bar above the keyboard for form inputs)\n\t\t\tcordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n\n\t\t\t// Don't remove this line unless you know what you are doing. It\n\t\t\t// stops the viewport from snapping when text inputs are focused.\n\t\t\t// Ionic handles this internally for a much nicer keyboard\n\t\t\t// experience.\n\t\t\tcordova.plugins.Keyboard.disableScroll(true);\n\t\t}\n\t\tif (window.StatusBar) {\n\t\t\tStatusBar.styleDefault();\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$urlRouterProvider\", function($urlRouterProvider) {\n\t$urlRouterProvider.otherwise('/app/');\n}]);\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.useSanitizeValueStrategy('escapeParameters');\n\n\t$translateProvider.useLocalStorage();\n\n\t$translateProvider.registerAvailableLanguageKeys(['en', 'fr'], {\n\t\t'en_*': 'en',\n\t\t'fr_*': 'fr'\n\t});\n\n\t$translateProvider.determinePreferredLanguage().fallbackLanguage('en');\n}]);\n\nangular.module('adama-mobile').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('app', {\n\t\tabstract: true,\n\t\turl: '/app',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.app;\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"pageTitle\", function($rootScope, pageTitle) {\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState) {\n\t\tif (toState && toState.data && toState.data.pageTitle) {\n\t\t\tpageTitle.set(toState.data.pageTitle);\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$httpProvider\", function($httpProvider) {\n\t$httpProvider.interceptors.push('authExpiredInterceptor');\n\t$httpProvider.interceptors.push('authInterceptor');\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$state\", \"principalService\", function($rootScope, $state, principalService) {\n\t$rootScope.$on('$stateChangeStart', function(event, toState) {\n\t\tif (toState.data && toState.data.authorities && toState.data.authorities.length > 0) {\n\t\t\t// state needs at least one authority\n\t\t\tif (!principalService.isAuthenticated()) {\n\t\t\t\t// send user to the signin state so user can log in\n\t\t\t\t$state.go('auth.signin');\n\t\t\t} else {\n\t\t\t\tif (!principalService.hasAnyAuthority(toState.data.authorities)) {\n\t\t\t\t\t// user is signed in but not authorized for desired state\n\t\t\t\t\t$state.go('auth.accessDenied');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", function($rootScope) {\n\t$rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n\t\tthrow error;\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$injector\", \"adamaConstant\", function($rootScope, $injector, adamaConstant) {\n\tvar $ionicPlatform, $cordovaBadge;\n\tif (adamaConstant.enableBadge) {\n\t\t$ionicPlatform = $injector.get('$ionicPlatform');\n\t\t$cordovaBadge = $injector.get('$cordovaBadge');\n\t\t$ionicPlatform.on('resume', function() {\n\t\t\t$cordovaBadge.clear();\n\t\t});\n\n\t\t$ionicPlatform.ready(function() {\n\t\t\t$cordovaBadge.clear();\n\t\t});\n\t}\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$injector\", \"adamaConstant\", function($rootScope, $injector, adamaConstant) {\n\tvar $ionicPlatform, $ionicPush, $ionicUser;\n\tif (adamaConstant.enablePush) {\n\t\t$ionicPlatform = $injector.get('$ionicPlatform');\n\t\t$ionicPush = $injector.get('$ionicPush');\n\t\t$ionicUser = $injector.get('$ionicUser');\n\t\t$ionicPlatform.ready(function() {\n\t\t\t$ionicPush.init({\n\t\t\t\tdebug: false,\n\t\t\t\tonNotification: function(notification) {\n\t\t\t\t\t$rootScope.$apply(function() {\n\t\t\t\t\t\t// TODO notification management\n\t\t\t\t\t\tvar payload = $ionicPush.getPayload(notification);\n\t\t\t\t\t\tconsole.log('notification, payload', notification, payload);\n\t\t\t\t\t\t$rootScope.notification = notification;\n\t\t\t\t\t\t$rootScope.payload = payload;\n\t\t\t\t\t\tif (notification.app.asleep || notification.app.closed) {\n\t\t\t\t\t\t\t// $state.go('tab.push');\n\t\t\t\t\t\t\tconsole.log('application was asleep or closed');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonRegister: function(data) {\n\t\t\t\t\tconsole.log('Device token', data.token);\n\t\t\t\t},\n\t\t\t\tcanShowAlert: false,\n\t\t\t\tcanSetBadge: true,\n\t\t\t\tcanPlaySound: true,\n\t\t\t\tcanRunActionsOnWake: true\n\t\t\t});\n\t\t\tif ($ionicUser.current().isAuthenticated()) {\n\t\t\t\t$ionicPush.register(function(data) {\n\t\t\t\t\tconsole.log('register at startup ok', data);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$ionicPush.unregister();\n\t\t\t}\n\t\t});\n\t\t$rootScope.$on('principal-new', function() {\n\t\t\t$ionicPush.register(function(data) {\n\t\t\t\tconsole.log('register after signing in ok', data);\n\t\t\t});\n\t\t});\n\t\t$rootScope.$on('principal-remove', function() {\n\t\t\t$ionicPush.unregister();\n\t\t});\n\t}\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('AccessDeniedCtrl', function() {\n\t// nothing to do\n});\n","'use strict';\n\nangular.module('adama-mobile').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('auth', {\n\t\tabstract: true,\n\t\turl: '/auth',\n\t\ttemplate: '' + //\n\t\t\t'<ui-view></ui-view>' + //\n\t\t\t''\n\t});\n\n\t$stateProvider.state('auth.signin', {\n\t\turl: '/',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authSignin;\n\t\t},\n\t\tcontroller: 'SigninCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'SIGNIN',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.recoverPassword', {\n\t\turl: '/recoverPassword',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authRecover;\n\t\t},\n\t\tcontroller: 'RecoverPasswordCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'RECOVER',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.accessDenied', {\n\t\turl: '/accessDenied',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authAccessDenied;\n\t\t},\n\t\tcontroller: 'AccessDeniedCtrl',\n\t\tcontrollerAs: 'ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCESS_DENIED',\n\t\t\tauthorities: []\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'SIGNIN': 'Identification',\n\t\t'SIGNIN_INTRO': 'Identifiez-vous pour démarrer votre session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'J\\'ai oublié mon mot de passe ...',\n\t\t'SIGNIN_USERNAME': 'Identifiant',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'L\\'identifiant est obligatoire',\n\t\t'SIGNIN_PASSWORD': 'Mot de passe',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'SIGNIN_SUBMIT': 'Démarrer la session',\n\t\t'SIGNIN_ERROR_TITLE': 'Erreur d\\'authentification',\n\t\t'SIGNIN_ERROR_MESSAGE': 'Identifiant ou mot de passe incorrect.',\n\t\t'RECOVER': 'Récupération de mot de passe',\n\t\t'RECOVER_INTRO': 'Saisissez votre email pour récupérer votre mot de passe',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'L\\'email est obligatoire',\n\t\t'RECOVER_MAIL_EMAIL': 'L\\'email n\\'est pas au bon format',\n\t\t'RECOVER_SUBMIT': 'Récupérer mon mot de passe',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Retour à l\\'identificaition',\n\t\t'RECOVER_SUCCESS': 'Consultez votre email pour connaître comment réinitialiser votre mot de passe.',\n\t\t'RECOVER_ERROR_TITLE': 'Erreur',\n\t\t'RECOVER_ERROR_GENERIC': 'Erreur lors de la récupération du mot de passe.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'L\\'email n\\'existe pas',\n\t\t'ACCESS_DENIED_BACK_TO_HOME': 'Retour à l\\'accueil',\n\t\t'ACCESS_DENIED': 'Accès interdit',\n\t\t'ACCESS_DENIED_INTRO': 'Vous n\\'avez pas suffisamment de droits d\\'accéder à cette page.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'SIGNIN': 'Signin',\n\t\t'SIGNIN_INTRO': 'Sign in to start your session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'I forgot my password ...',\n\t\t'SIGNIN_USERNAME': 'Username',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'Username is required',\n\t\t'SIGNIN_PASSWORD': 'Password',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Password is required',\n\t\t'SIGNIN_SUBMIT': 'Start session',\n\t\t'SIGNIN_ERROR_TITLE': 'Authentication error',\n\t\t'SIGNIN_ERROR_MESSAGE': 'Username or password are incorrect.',\n\t\t'RECOVER': 'Recover password',\n\t\t'RECOVER_INTRO': 'Set your email to recover your password',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'Email is required',\n\t\t'RECOVER_MAIL_EMAIL': 'Email does not respect the right format',\n\t\t'RECOVER_SUBMIT': 'Retrieve my password',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Back to signin',\n\t\t'RECOVER_SUCCESS': 'Check your e-mails for details on how to reset your password.',\n\t\t'RECOVER_ERROR_TITLE': 'Error',\n\t\t'RECOVER_ERROR_GENERIC': 'Recovering error.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'E-Mail address isn\\'t registered! Please check and try again',\n\t\t'ACCESS_DENIED_BACK_TO_HOME': 'Back to home',\n\t\t'ACCESS_DENIED': 'Access denied',\n\t\t'ACCESS_DENIED_INTRO': 'You do not have enough privileges to access this page.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('RecoverPasswordCtrl', [\"$filter\", \"$ionicPopup\", \"principalService\", function($filter, $ionicPopup, principalService) {\n\tvar ctrl = this;\n\tctrl.recover = function(userEmail) {\n\t\tctrl.recoverSuccess = false;\n\t\tctrl.recoverError = false;\n\t\tctrl.errorEmailNotExists = false;\n\t\tctrl.loading = true;\n\t\tprincipalService.resetPasswordInit(userEmail).then(function() {\n\t\t\tctrl.recoverSuccess = true;\n\t\t}).catch(function(response) {\n\t\t\tvar messageKey = 'RECOVER_ERROR_GENERIC';\n\t\t\tif (response.status === 400 && response.data === 'e-mail address not registered') {\n\t\t\t\tmessageKey = 'RECOVER_ERROR_EMAIL_NOT_EXIST';\n\t\t\t}\n\t\t\tvar translateFn = $filter('translate');\n\t\t\t$ionicPopup.alert({\n\t\t\t\ttitle: translateFn('RECOVER_ERROR_TITLE'),\n\t\t\t\ttemplate: translateFn(messageKey)\n\t\t\t});\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('SigninCtrl', [\"$rootScope\", \"$state\", \"authService\", \"$filter\", \"$ionicPopup\", function($rootScope, $state, authService, $filter, $ionicPopup) {\n\tvar ctrl = this;\n\tctrl.signin = function(userName, userPassword) {\n\t\tauthService.login(userName, userPassword).then(function() {\n\t\t\t$state.go('app.main');\n\t\t}).catch(function(rejection) {\n\t\t\tconsole.error('error while signing in', rejection);\n\t\t\tvar translateFn = $filter('translate');\n\t\t\t$ionicPopup.alert({\n\t\t\t\ttitle: translateFn('SIGNIN_ERROR_TITLE'),\n\t\t\t\ttemplate: translateFn('SIGNIN_ERROR_MESSAGE')\n\t\t\t});\n\t\t});\n\t};\n}]);\n","'use strict';\n\n// TODO still needed ?\nangular.module('adama-mobile')\n\t.directive('jhAlert', [\"AlertService\", function(AlertService) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate: '<div class=\"content-wrapper\" ng-cloak ng-if=\"alerts && alerts.length\">' +\n\t\t\t\t'<div class=\"box-body\">' +\n\t\t\t\t'<div ng-repeat=\"alert in alerts\" class=\"alert alert-dismissible\" ng-class=\"\\'alert-\\' + alert.type\">' +\n\t\t\t\t'<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>' +\n\t\t\t\t'{{ alert.msg }}' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>',\n\t\t\tcontroller: ['$scope',\n\t\t\t\tfunction($scope) {\n\t\t\t\t\t$scope.alerts = AlertService.get();\n\t\t\t\t\t$scope.$on('$destroy', function() {\n\t\t\t\t\t\t$scope.alerts = [];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}])\n\t.directive('jhAlertError', [\"AlertService\", \"$rootScope\", \"$translate\", function(AlertService, $rootScope, $translate) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate: '<div class=\"alerts\" ng-if=\"alerts && alerts.length\">' +\n\t\t\t\t'<div ng-repeat=\"alert in alerts\" class=\"alert alert-dismissible\" ng-class=\"\\'alert-\\' + alert.type\">' +\n\t\t\t\t'<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>' +\n\t\t\t\t'{{ alert.msg }}' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>',\n\t\t\tcontroller: ['$scope', 'adamaConstant',\n\t\t\t\tfunction($scope, adamaConstant) {\n\n\t\t\t\t\t$scope.alerts = [];\n\n\t\t\t\t\tvar addErrorAlert = function(message, key, data) {\n\t\t\t\t\t\tkey = key && key !== null ? key : message;\n\t\t\t\t\t\t$scope.alerts.push(\n\t\t\t\t\t\t\tAlertService.add({\n\t\t\t\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\t\t\t\tmsg: key,\n\t\t\t\t\t\t\t\t\tparams: data,\n\t\t\t\t\t\t\t\t\ttimeout: 5000,\n\t\t\t\t\t\t\t\t\ttoast: AlertService.isToast(),\n\t\t\t\t\t\t\t\t\tscoped: true\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t$scope.alerts\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tvar cleanHttpErrorListener = $rootScope.$on(adamaConstant.appModule + '.httpError', function(event, httpResponse) {\n\t\t\t\t\t\tvar i;\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tswitch (httpResponse.status) {\n\t\t\t\t\t\t\t// connection refused, server not reachable\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\taddErrorAlert('Server not reachable', 'error.server.not.reachable');\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 400:\n\t\t\t\t\t\t\t\tvar errorHeader = httpResponse.headers('X-' + adamaConstant.appModule + '-error');\n\t\t\t\t\t\t\t\tvar entityKey = httpResponse.headers('X-' + adamaConstant.appModule + '-params');\n\t\t\t\t\t\t\t\tif (errorHeader) {\n\t\t\t\t\t\t\t\t\tvar entityName = $translate.instant('global.menu.entities.' + entityKey);\n\t\t\t\t\t\t\t\t\taddErrorAlert(errorHeader, errorHeader, {\n\t\t\t\t\t\t\t\t\t\tentityName: entityName\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else if (httpResponse.data && httpResponse.data.fieldErrors) {\n\t\t\t\t\t\t\t\t\tfor (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n\t\t\t\t\t\t\t\t\t\tvar fieldError = httpResponse.data.fieldErrors[i];\n\t\t\t\t\t\t\t\t\t\t// convert 'something[14].other[4].id'\n\t\t\t\t\t\t\t\t\t\t// to 'something[].other[].id' so\n\t\t\t\t\t\t\t\t\t\t// translations can be written to it\n\t\t\t\t\t\t\t\t\t\tvar convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n\t\t\t\t\t\t\t\t\t\tvar fieldName = $translate.instant(adamaConstant.appModule + '.' + fieldError.objectName + '.' + convertedField);\n\t\t\t\t\t\t\t\t\t\taddErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {\n\t\t\t\t\t\t\t\t\t\t\tfieldName: fieldName\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (httpResponse.data && httpResponse.data.message) {\n\t\t\t\t\t\t\t\t\taddErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\taddErrorAlert(httpResponse.data);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tif (httpResponse.data && httpResponse.data.message) {\n\t\t\t\t\t\t\t\t\taddErrorAlert(httpResponse.data.message);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\taddErrorAlert(JSON.stringify(httpResponse));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$scope.$on('$destroy', function() {\n\t\t\t\t\t\tif (cleanHttpErrorListener !== undefined && cleanHttpErrorListener !== null) {\n\t\t\t\t\t\t\tcleanHttpErrorListener();\n\t\t\t\t\t\t\t$scope.alerts = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}]);\n","'use strict';\n\n// TODO still needed ?\nangular.module('adama-mobile')\n\t.provider('AlertService', function() {\n\t\tvar toast = false;\n\n\t\tthis.$get = ['$timeout', '$sce', '$translate', function($timeout, $sce, $translate) {\n\n\t\t\tvar alertId = 0; // unique id for each alert. Starts from 0.\n\t\t\tvar alerts = [];\n\t\t\tvar timeout = 5000; // default timeout\n\n\t\t\tvar isToast = function() {\n\t\t\t\treturn toast;\n\t\t\t};\n\n\t\t\tvar clear = function() {\n\t\t\t\talerts = [];\n\t\t\t};\n\n\t\t\tvar get = function() {\n\t\t\t\treturn alerts;\n\t\t\t};\n\n\t\t\tvar closeAlertByIndex = function(index, thisAlerts) {\n\t\t\t\treturn thisAlerts.splice(index, 1);\n\t\t\t};\n\n\t\t\tvar closeAlert = function(id, extAlerts) {\n\t\t\t\tvar thisAlerts = extAlerts ? extAlerts : alerts;\n\t\t\t\treturn closeAlertByIndex(thisAlerts.map(function(e) {\n\t\t\t\t\treturn e.id;\n\t\t\t\t}).indexOf(id), thisAlerts);\n\t\t\t};\n\n\t\t\tvar factory = function(alertOptions) {\n\t\t\t\tvar alert = {\n\t\t\t\t\ttype: alertOptions.type,\n\t\t\t\t\tmsg: $sce.trustAsHtml(alertOptions.msg),\n\t\t\t\t\tid: alertOptions.alertId,\n\t\t\t\t\ttimeout: alertOptions.timeout,\n\t\t\t\t\ttoast: alertOptions.toast,\n\t\t\t\t\tposition: alertOptions.position ? alertOptions.position : 'top right',\n\t\t\t\t\tscoped: alertOptions.scoped,\n\t\t\t\t\tclose: function(alerts) {\n\t\t\t\t\t\treturn closeAlert(this.id, alerts);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (!alert.scoped) {\n\t\t\t\t\talerts.push(alert);\n\t\t\t\t}\n\t\t\t\treturn alert;\n\t\t\t};\n\n\t\t\tvar addAlert = function(alertOptions, extAlerts) {\n\t\t\t\talertOptions.alertId = alertId++;\n\t\t\t\talertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\n\t\t\t\tvar alert = factory(alertOptions);\n\t\t\t\tif (alertOptions.timeout && alertOptions.timeout > 0) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\tcloseAlert(alertOptions.alertId, extAlerts);\n\t\t\t\t\t}, alertOptions.timeout);\n\t\t\t\t}\n\t\t\t\treturn alert;\n\t\t\t};\n\n\t\t\tvar success = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar error = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'danger',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar warning = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar info = function(msg, params, position) {\n\t\t\t\treturn addAlert({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmsg: msg,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttimeout: timeout,\n\t\t\t\t\ttoast: toast,\n\t\t\t\t\tposition: position\n\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\tfactory: factory,\n\t\t\t\tisToast: isToast,\n\t\t\t\tadd: addAlert,\n\t\t\t\tcloseAlert: closeAlert,\n\t\t\t\tcloseAlertByIndex: closeAlertByIndex,\n\t\t\t\tclear: clear,\n\t\t\t\tget: get,\n\t\t\t\tsuccess: success,\n\t\t\t\terror: error,\n\t\t\t\tinfo: info,\n\t\t\t\twarning: warning\n\t\t\t};\n\t\t}];\n\n\t\tthis.showAsToast = function(isToast) {\n\t\t\ttoast = isToast;\n\t\t};\n\n\t});\n","'use strict';\n\nangular.module('adama-mobile').factory('User', [\"$resource\", \"adamaConstant\", \"adamaResourceConfig\", function($resource, adamaConstant, adamaResourceConfig) {\n\tvar config = angular.extend({}, adamaResourceConfig, {\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tlogin: '@login'\n\t\t\t}\n\t\t}\n\t});\n\treturn $resource(adamaConstant.apiBase + 'api/users/:login', {}, config);\n}]);\n","'use strict';\n\nangular.module('adama-mobile').constant('adamaConstant', {\n\tapiBase: 'http://localhost:13337/',\n\tappModule: 'mySuperApp',\n\tadamaMobileToolkitTemplateUrl: {\n\t\tapp: 'adama-mobile/app.html',\n\t\tauthAccessDenied: 'adama-mobile/auth/accessDenied.html',\n\t\tauthSignin: 'adama-mobile/auth/signin.html',\n\t\tauthRecover: 'adama-mobile/auth/recoverPassword.html'\n\t},\n\tenableBadge: false,\n\tenablePush: false,\n\turlResetPassword: 'path/to/reset/password?isMobile=true'\n});\n","'use strict';\n\nangular.module('adama-mobile').factory('adamaResourceConfig', [\"ParseLinks\", function(ParseLinks) {\n\treturn {\n\t\t'query': {\n\t\t\tmethod: 'GET',\n\t\t\tisArray: true,\n\t\t\ttransformResponse: function(data, headers, status) {\n\t\t\t\tdata = angular.fromJson(data);\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tdata.$metadata = {\n\t\t\t\t\t\tlinks: ParseLinks.parse(headers('link')),\n\t\t\t\t\t\ttotalItems: headers('X-Total-Count')\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t},\n\t\t\tinterceptor: {\n\t\t\t\tresponse: function(response) {\n\t\t\t\t\tresponse.resource.$metadata = response.data.$metadata;\n\t\t\t\t\treturn response.resource;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'get': {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\t'save': {\n\t\t\tmethod: 'POST'\n\t\t},\n\t\t'update': {\n\t\t\tmethod: 'PUT'\n\t\t},\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tid: '@id'\n\t\t\t}\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('adamaTokenService', [\"$rootScope\", \"$http\", \"$q\", \"$state\", \"$ionicUser\", \"jwtHelper\", \"adamaConstant\", function($rootScope, $http, $q, $state, $ionicUser, jwtHelper, adamaConstant) {\n\tvar api = {};\n\n\tvar ionicUser = $ionicUser.current();\n\t$rootScope.$on('principal-new', function() {\n\t\tionicUser = $ionicUser.current();\n\t});\n\n\tapi.getToken = function() {\n\t\tconsole.log('getToken');\n\t\tvar token;\n\t\tif (ionicUser.isAuthenticated()) {\n\t\t\ttoken = ionicUser.get('access_token');\n\t\t\tif (jwtHelper.isTokenExpired(token)) {\n\t\t\t\treturn api.refreshAndGetToken();\n\t\t\t}\n\t\t}\n\t\treturn $q.when(token);\n\t};\n\n\tapi.refreshAndGetToken = function() {\n\t\tvar token = ionicUser.get('access_token');\n\t\tvar refreshToken = ionicUser.get('refresh_token');\n\t\treturn $http({\n\t\t\tmethod: 'POST',\n\t\t\turl: adamaConstant.apiBase + 'api/login/refresh',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t'refresh_token': refreshToken\n\t\t\t}\n\t\t}).then(function(response) {\n\t\t\tvar newToken = response.data;\n\t\t\tionicUser.set('access_token', newToken);\n\t\t\treturn ionicUser.save().then(function() {\n\t\t\t\treturn newToken;\n\t\t\t});\n\t\t}, function(rejection) {\n\t\t\tconsole.error('error while refreshing user token, redirect to signin', rejection);\n\t\t\t$state.go('auth.signin');\n\t\t});\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('authService', [\"$http\", \"$ionicAuth\", \"adamaConstant\", \"principalService\", function($http, $ionicAuth, adamaConstant, principalService) {\n\tvar api = {};\n\n\tapi.login = function(username, password) {\n\t\tconsole.log('login', username);\n\t\tvar authOptions = {\n\t\t\tremember: true\n\t\t};\n\t\tvar data = {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t};\n\t\treturn $ionicAuth.login('custom', authOptions, data).then(function() {\n\t\t\tconsole.log('login is ok, ask custom auth server to refresh the user data');\n\t\t\treturn $http({\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: adamaConstant.apiBase + 'externalLogin/refreshUserExternal',\n\t\t\t\tdata: {\n\t\t\t\t\texternalId: username\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(function() {\n\t\t\tconsole.log('refreshing custom auth server is ok, ask ionic for the updateduser info');\n\t\t\t// get the new user information from ionic\n\t\t\treturn principalService.resetPrincipal();\n\t\t});\n\t};\n\n\tapi.logout = function() {\n\t\tconsole.log('logout');\n\t\t$ionicAuth.logout();\n\t\tprincipalService.deletePrincipal();\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('binaryFileService', [\"$http\", \"$q\", \"adamaConstant\", function($http, $q, adamaConstant) {\n\tvar api = {};\n\n\tapi.initUrlForBinaryFiles = function(binaryFileList) {\n\t\tvar workingList = [];\n\t\tvar idList = [];\n\t\tangular.forEach(binaryFileList, function(binaryFile) {\n\t\t\tif (binaryFile && binaryFile.id && !binaryFile.url) {\n\t\t\t\tworkingList.push(binaryFile);\n\t\t\t\tidList.push(binaryFile.id);\n\t\t\t}\n\t\t});\n\t\tif (idList.length) {\n\t\t\treturn $http({\n\t\t\t\tmethod: 'PUT',\n\t\t\t\turl: adamaConstant.apiBase + 'api/files',\n\t\t\t\tdata: {\n\t\t\t\t\tidList: idList\n\t\t\t\t}\n\t\t\t}).then(function(response) {\n\t\t\t\tangular.forEach(workingList, function(binaryFile) {\n\t\t\t\t\tbinaryFile.url = response.data[binaryFile.id];\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn $q.when();\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').provider('language', function() {\n\tvar languages = ['en', 'fr'];\n\tvar selectorData = [{\n\t\tcode: 'en',\n\t\tlabelKey: 'FLAG_EN',\n\t\tcssCLass: 'us'\n\t}, {\n\t\tcode: 'fr',\n\t\tlabelKey: 'FLAG_FR',\n\t\tcssCLass: 'fr'\n\t}];\n\n\tthis.setLanguages = function(newLanguages) {\n\t\tlanguages = newLanguages;\n\t};\n\n\tthis.setSelectorData = function(newSelectorData) {\n\t\tselectorData = newSelectorData;\n\t};\n\n\tthis.$get = [\"$q\", \"$http\", \"$translate\", function($q, $http, $translate) {\n\t\tvar api = {};\n\n\t\tapi.getCurrent = function() {\n\t\t\tvar language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\t\t\tif (angular.isUndefined(language)) {\n\t\t\t\tlanguage = 'en';\n\t\t\t}\n\t\t\treturn $q.when(language);\n\t\t};\n\n\t\tapi.getAll = function() {\n\t\t\treturn $q.when(languages);\n\t\t};\n\n\t\tapi.getSelectorData = function() {\n\t\t\treturn $q.when(selectorData);\n\t\t};\n\n\t\treturn api;\n\t}];\n});\n","'use strict';\n\nangular.module('adama-mobile').factory('pageTitle', [\"$rootScope\", \"$filter\", function($rootScope, $filter) {\n\tvar translateFn = $filter('translate');\n\tvar api = {};\n\n\tapi.set = function(pageTitleKey) {\n\t\tvar newTitle = translateFn(pageTitleKey);\n\t\t$rootScope.pageTitle = newTitle;\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').service('ParseLinks', function() {\n\tthis.parse = function(header) {\n\t\tif (header.length === 0) {\n\t\t\tthrow new Error('input must not be of zero length');\n\t\t}\n\n\t\t// Split parts by comma\n\t\tvar parts = header.split(',');\n\t\tvar links = {};\n\t\t// Parse each part into a named link\n\t\tangular.forEach(parts, function(p) {\n\t\t\tvar section = p.split(';');\n\t\t\tif (section.length !== 2) {\n\t\t\t\tthrow new Error('section could not be split on \";\"');\n\t\t\t}\n\t\t\tvar url = section[0].replace(/<(.*)>/, '$1').trim();\n\t\t\tvar queryString = {};\n\t\t\turl.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), function($0, $1, $2, $3) {\n\t\t\t\tqueryString[$1] = $3;\n\t\t\t});\n\t\t\tvar page = queryString.page;\n\t\t\tif (angular.isString(page)) {\n\t\t\t\tpage = parseInt(page);\n\t\t\t}\n\t\t\tvar name = section[1].replace(/rel='(.*)'/, '$1').trim();\n\t\t\tlinks[name] = page;\n\t\t});\n\n\t\treturn links;\n\t};\n});\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('principalService', [\"$rootScope\", \"$q\", \"$http\", \"$resource\", \"$ionicUser\", \"adamaConstant\", function($rootScope, $q, $http, $resource, $ionicUser, adamaConstant) {\n\tvar api = {};\n\tvar principalPromise = $q.reject('not init');\n\tvar isAuthenticated = false;\n\tvar accountResource = $resource(adamaConstant.apiBase + 'api/account', {}, {});\n\tvar passwordResource = $resource(adamaConstant.apiBase + 'api/account/change_password', {}, {});\n\tvar passwordResetInitResource = $resource(adamaConstant.apiBase + 'api/account/reset_password/init', {}, {});\n\n\tapi.resetPrincipal = function() {\n\t\tisAuthenticated = false;\n\t\tvar ionicUser = $ionicUser.current();\n\t\tif (ionicUser.isAuthenticated()) {\n\t\t\tprincipalPromise = $http({\n\t\t\t\tmethod: 'GET',\n\t\t\t\turl: adamaConstant.apiBase + 'api/users/byLogin/' + ionicUser['external_id']\n\t\t\t}).then(function(response) {\n\t\t\t\tvar principal = response.data;\n\t\t\t\tisAuthenticated = true;\n\t\t\t\t$rootScope.$broadcast('principal-new', {\n\t\t\t\t\tprincipal: principal\n\t\t\t\t});\n\t\t\t\treturn principal;\n\t\t\t});\n\t\t} else {\n\t\t\tprincipalPromise = $q.reject('not logged');\n\t\t}\n\t\treturn principalPromise;\n\t};\n\n\tapi.getPrincipal = function() {\n\t\treturn principalPromise;\n\t};\n\n\tapi.deletePrincipal = function() {\n\t\tisAuthenticated = false;\n\t\tprincipalPromise = $q.reject('not logged');\n\t\t$rootScope.$broadcast('principal-remove');\n\t};\n\n\tapi.authorize = function() {\n\t\tconsole.log('authorize');\n\t};\n\n\tapi.hasAnyAuthority = function(authorities) {\n\t\tconsole.log('hasAnyAuthority', authorities);\n\t\t// TODO\n\t\treturn true;\n\t};\n\n\tapi.resetPasswordInit = function(mail) {\n\t\tconsole.log('resetPasswordInit', mail);\n\t\treturn passwordResetInitResource.save({\n\t\t\tmail: mail,\n\t\t\turlResetPassword: adamaConstant.urlResetPassword\n\t\t}).$promise;\n\t};\n\n\tapi.updateAccount = function(principal) {\n\t\tconsole.log('updateAccount', principal);\n\t\treturn accountResource.save(principal, function() {\n\t\t\t$rootScope.$emit('principal-update', {\n\t\t\t\tprincipal: principal\n\t\t\t});\n\t\t\tprincipalPromise = $q.when(principal);\n\t\t}).$promise;\n\t};\n\n\tapi.changePassword = function(newPassword) {\n\t\tconsole.log('changePassword');\n\t\treturn passwordResource.save({\n\t\t\tpassword: newPassword\n\t\t}).$promise;\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'BTN_SIGNOUT': 'Déconnexion'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'BTN_SIGNOUT': 'Sign out'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-mobile').component('btnSignout', {\n\ttemplateUrl: 'adama-mobile/btn-signout/btn-signout.html',\n\tcontroller: [\"authService\", \"$state\", function(authService, $state) {\n\t\tvar ctrl = this;\n\t\tctrl.signout = function() {\n\t\t\tauthService.logout();\n\t\t\t$state.go('auth.signin');\n\t\t};\n\t}]\n});\n","'use strict';\n\nangular.module('adama-mobile').directive('dsBinaryFileUrl', [\"$parse\", \"binaryFileService\", function($parse, binaryFileService) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar updateOutput = function(binaryFileList) {\n\t\t\t\tif (attrs.output) {\n\t\t\t\t\tbinaryFileList = angular.copy(binaryFileList);\n\t\t\t\t}\n\t\t\t\tif (!angular.isArray(binaryFileList)) {\n\t\t\t\t\tbinaryFileList = [binaryFileList];\n\t\t\t\t}\n\t\t\t\tbinaryFileService.initUrlForBinaryFiles(binaryFileList).then(function() {\n\t\t\t\t\tif (attrs.output) {\n\t\t\t\t\t\t$parse(attrs.output).assign(scope, binaryFileList);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tscope.$watch(attrs.input, function() {\n\t\t\t\tvar binaryFileList = $parse(attrs.input)(scope);\n\t\t\t\tif (binaryFileList) {\n\t\t\t\t\tupdateOutput(binaryFileList);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').directive('dsLanguage', [\"$parse\", \"language\", function($parse, language) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tlanguage.getAll().then(function(languages) {\n\t\t\t\t$parse(attrs.data).assign(scope, languages);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').directive('dsPrincipalIdentity', [\"$rootScope\", \"$parse\", \"principalService\", function($rootScope, $parse, principalService) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\t$rootScope.$on('principal-new', function(event, data) {\n\t\t\t\t$parse(attrs.data).assign(scope, data.principal);\n\t\t\t});\n\t\t\t$rootScope.$on('principal-remove', function() {\n\t\t\t\t$parse(attrs.data).assign(scope, undefined);\n\t\t\t});\n\t\t\tprincipalService.getPrincipal().then(function(principal) {\n\t\t\t\t$parse(attrs.data).assign(scope, principal);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('authExpiredInterceptor', [\"$injector\", \"$q\", \"adamaConstant\", function($injector, $q, adamaConstant) {\n\tvar getHttpService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('$http'));\n\t\t};\n\t}());\n\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\treturn {\n\t\tresponseError: function(response) {\n\t\t\tvar config = response.config;\n\t\t\tif (response.status === 401 && config.url.indexOf(adamaConstant.apiBase) === 0) {\n\t\t\t\treturn getAdamaTokenService().refreshAndGetToken().then(function() {\n\t\t\t\t\treturn getHttpService()(config);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn $q.reject(response);\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('authInterceptor', [\"$injector\", \"adamaConstant\", function($injector, adamaConstant) {\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\treturn {\n\t\t// Add authorization token to headers\n\t\trequest: function(config) {\n\t\t\tconfig.headers = config.headers || {};\n\t\t\tif (!config.headers['x-auth-token'] && config.url.indexOf(adamaConstant.apiBase) === 0) {\n\t\t\t\treturn getAdamaTokenService().getToken().then(function(token) {\n\t\t\t\t\tif (token) {\n\t\t\t\t\t\tconfig.headers['Authorization'] = 'Bearer ' + token;\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn config;\n\t\t}\n\t};\n}]);\n"],"sourceRoot":"/source/"}