{"version":3,"sources":["app.js","app-config.js","auth/accessDenied.controller.js","auth/app.js","auth/recoverPassword.controller.js","auth/signin.controller.js","btn-signout/app.js","btn-signout/btn-signout.directive.js","datasources/binary-file-url.datasource.js","datasources/language.datasource.js","datasources/principal-identity.datasource.js","resources/user.resource.js","interceptors/auth-expired.interceptor.js","interceptors/auth.interceptor.js","services/adama-resource-config.service.js","services/adama-token.service.js","services/adama.constant.js","services/auth.service.js","services/binary-file.service.js","services/language.provider.js","services/page-title.service.js","services/parse-links.service.js","services/principal.service.js"],"names":["angular","module","run","$ionicPlatform","ready","window","cordova","plugins","Keyboard","hideKeyboardAccessoryBar","disableScroll","StatusBar","styleDefault","config","$urlRouterProvider","otherwise","$injector","$state","get","go","$translateProvider","useSanitizeValueStrategy","useLocalStorage","registerAvailableLanguageKeys","en_*","fr_*","determinePreferredLanguage","fallbackLanguage","$stateProvider","adamaConstant","state","abstract","url","templateUrl","adamaMobileToolkitTemplateUrl","app","$rootScope","pageTitle","$on","event","toState","data","set","$httpProvider","interceptors","push","principalService","authorities","length","isAuthenticated","hasAnyAuthority","toParams","fromState","fromParams","error","$cordovaBadge","enableBadge","on","clear","$ionicPush","$ionicUser","enablePush","init","debug","onNotification","notification","$apply","payload","getPayload","console","log","asleep","closed","onRegister","token","canShowAlert","canSetBadge","canPlaySound","canRunActionsOnWake","current","register","unregister","controller","template","authSignin","controllerAs","authRecover","authAccessDenied","translations","SIGNIN","SIGNIN_INTRO","SIGNIN_FORGET_PASSWORD","SIGNIN_USERNAME","SIGNIN_USERNAME_REQUIRED","SIGNIN_PASSWORD","SIGNIN_PASSWORD_REQUIRED","SIGNIN_SUBMIT","SIGNIN_LOADING","SIGNIN_ERROR_TITLE","SIGNIN_ERROR_MESSAGE","RECOVER","RECOVER_INTRO","RECOVER_MAIL","RECOVER_MAIL_REQUIRED","RECOVER_MAIL_EMAIL","RECOVER_SUBMIT","RECOVER_BACK_TO_LOGIN","RECOVER_SUCCESS","RECOVER_ERROR_TITLE","RECOVER_ERROR_GENERIC","RECOVER_ERROR_EMAIL_NOT_EXIST","ACCESS_DENIED_BACK_TO_HOME","ACCESS_DENIED","ACCESS_DENIED_INTRO","$filter","$ionicPopup","ctrl","this","recover","userEmail","recoverSuccess","recoverError","errorEmailNotExists","loading","resetPasswordInit","then","response","messageKey","status","translateFn","alert","title","authService","signin","userName","userPassword","login","rejection","BTN_SIGNOUT","component","signout","logout","directive","$parse","binaryFileService","scope","link","element","attrs","updateOutput","binaryFileList","output","copy","isArray","initUrlForBinaryFiles","assign","$watch","input","language","getAll","languages","principal","undefined","getPrincipal","factory","$resource","adamaResourceConfig","extend","delete","method","params","apiBase","$q","getHttpService","service","getAdamaTokenService","responseError","indexOf","refreshAndGetToken","headers","reject","request","getToken","ParseLinks","query","transformResponse","fromJson","$metadata","links","parse","totalItems","interceptor","resource","save","update","id","$http","jwtHelper","api","ionicUser","isTokenExpired","when","refreshToken","Authorization","refresh_token","newToken","access_token","constant","urlResetPassword","$ionicAuth","username","password","authOptions","remember","externalId","$broadcast","resetPrincipal","deletePrincipal","workingList","idList","forEach","binaryFile","toJson","urlList","provider","selectorData","code","labelKey","cssCLass","setLanguages","newLanguages","setSelectorData","newSelectorData","$get","$translate","getCurrent","storage","isUndefined","getSelectorData","pageTitleKey","newTitle","header","Error","parts","split","p","section","replace","trim","queryString","RegExp","$0","$1","$2","$3","page","isString","parseInt","name","principalPromise","accountResource","passwordResource","passwordResetInitResource","result","details","mail","$promise","updateAccount","$emit","changePassword","newPassword"],"mappings":"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","file":"adama-mobile-min.js","sourcesContent":["'use strict';\n\nangular.module('adama-mobile', [ //\n\t'ionic', //\n\t'ionic.service.core', //\n\t'ionic.service.auth', //\n\t'ionic.service.deploy', //\n\t'ionic.service.push', //\n\t'pascalprecht.translate', //\n\t'ngCookies', //\n\t'ngResource', //\n\t'LocalStorageModule', //\n\t'ngCordova', //\n\t'angular-jwt', //\n\t'ngMessages' //\n]);\n","/* globals StatusBar:false, cordova: false */\n\n'use strict';\n\nangular.module('adama-mobile').run([\"$ionicPlatform\", function($ionicPlatform) {\n\t$ionicPlatform.ready(function() {\n\t\tif (window.cordova && window.cordova.plugins.Keyboard) {\n\t\t\t// Hide the accessory bar by default (remove this to show the\n\t\t\t// accessory bar above the keyboard for form inputs)\n\t\t\tcordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n\n\t\t\t// Don't remove this line unless you know what you are doing. It\n\t\t\t// stops the viewport from snapping when text inputs are focused.\n\t\t\t// Ionic handles this internally for a much nicer keyboard\n\t\t\t// experience.\n\t\t\tcordova.plugins.Keyboard.disableScroll(true);\n\t\t}\n\t\tif (window.StatusBar) {\n\t\t\tStatusBar.styleDefault();\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$urlRouterProvider\", function($urlRouterProvider) {\n\t// see https://github.com/angular-ui/ui-router/issues/600#issuecomment-47228922\n\t$urlRouterProvider.otherwise(function($injector) {\n\t\tvar $state = $injector.get('$state');\n\t\t$state.go('app.main');\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.useSanitizeValueStrategy('escapeParameters');\n\n\t$translateProvider.useLocalStorage();\n\n\t$translateProvider.registerAvailableLanguageKeys(['en', 'fr'], {\n\t\t'en_*': 'en',\n\t\t'fr_*': 'fr'\n\t});\n\n\t$translateProvider.determinePreferredLanguage().fallbackLanguage('en');\n}]);\n\nangular.module('adama-mobile').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('app', {\n\t\tabstract: true,\n\t\turl: '/app',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.app;\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"pageTitle\", function($rootScope, pageTitle) {\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState) {\n\t\tif (toState && toState.data && toState.data.pageTitle) {\n\t\t\tpageTitle.set(toState.data.pageTitle);\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$httpProvider\", function($httpProvider) {\n\t$httpProvider.interceptors.push('authExpiredInterceptor');\n\t$httpProvider.interceptors.push('authInterceptor');\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$state\", \"principalService\", function($rootScope, $state, principalService) {\n\t$rootScope.$on('$stateChangeStart', function(event, toState) {\n\t\tif (toState.data && toState.data.authorities && toState.data.authorities.length > 0) {\n\t\t\t// state needs at least one authority\n\t\t\tif (!principalService.isAuthenticated()) {\n\t\t\t\t// send user to the signin state so user can log in\n\t\t\t\t$state.go('auth.signin');\n\t\t\t} else {\n\t\t\t\tif (!principalService.hasAnyAuthority(toState.data.authorities)) {\n\t\t\t\t\t// user is signed in but not authorized for desired state\n\t\t\t\t\t$state.go('auth.accessDenied');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", function($rootScope) {\n\t$rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n\t\tthrow error;\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$injector\", \"adamaConstant\", function($rootScope, $injector, adamaConstant) {\n\tvar $ionicPlatform, $cordovaBadge;\n\tif (adamaConstant.enableBadge) {\n\t\t$ionicPlatform = $injector.get('$ionicPlatform');\n\t\t$cordovaBadge = $injector.get('$cordovaBadge');\n\t\t$ionicPlatform.on('resume', function() {\n\t\t\t$cordovaBadge.clear();\n\t\t});\n\n\t\t$ionicPlatform.ready(function() {\n\t\t\t$cordovaBadge.clear();\n\t\t});\n\t}\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$injector\", \"adamaConstant\", function($rootScope, $injector, adamaConstant) {\n\tvar $ionicPlatform, $ionicPush, $ionicUser;\n\tif (adamaConstant.enablePush) {\n\t\t$ionicPlatform = $injector.get('$ionicPlatform');\n\t\t$ionicPush = $injector.get('$ionicPush');\n\t\t$ionicUser = $injector.get('$ionicUser');\n\t\t$ionicPlatform.ready(function() {\n\t\t\t$ionicPush.init({\n\t\t\t\tdebug: false,\n\t\t\t\tonNotification: function(notification) {\n\t\t\t\t\t$rootScope.$apply(function() {\n\t\t\t\t\t\t// TODO notification management\n\t\t\t\t\t\tvar payload = $ionicPush.getPayload(notification);\n\t\t\t\t\t\tconsole.log('notification, payload', notification, payload);\n\t\t\t\t\t\t$rootScope.notification = notification;\n\t\t\t\t\t\t$rootScope.payload = payload;\n\t\t\t\t\t\tif (notification.app.asleep || notification.app.closed) {\n\t\t\t\t\t\t\t// $state.go('tab.push');\n\t\t\t\t\t\t\tconsole.log('application was asleep or closed');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonRegister: function(data) {\n\t\t\t\t\tconsole.log('Device token', data.token);\n\t\t\t\t},\n\t\t\t\tcanShowAlert: false,\n\t\t\t\tcanSetBadge: true,\n\t\t\t\tcanPlaySound: true,\n\t\t\t\tcanRunActionsOnWake: true\n\t\t\t});\n\t\t\tif ($ionicUser.current().isAuthenticated()) {\n\t\t\t\t$ionicPush.register(function(data) {\n\t\t\t\t\tconsole.log('register at startup ok', data);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$ionicPush.unregister();\n\t\t\t}\n\t\t});\n\t\t$rootScope.$on('ionicuser-new', function() {\n\t\t\t$ionicPush.register(function(data) {\n\t\t\t\tconsole.log('register after signing in ok', data);\n\t\t\t});\n\t\t});\n\t\t$rootScope.$on('principal-remove', function() {\n\t\t\t$ionicPush.unregister();\n\t\t});\n\t}\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('AccessDeniedCtrl', function() {\n\t// nothing to do\n});\n","'use strict';\n\nangular.module('adama-mobile').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('auth', {\n\t\tabstract: true,\n\t\turl: '/auth',\n\t\ttemplate: '' + //\n\t\t\t'<ui-view></ui-view>' + //\n\t\t\t''\n\t});\n\n\t$stateProvider.state('auth.signin', {\n\t\turl: '/',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authSignin;\n\t\t},\n\t\tcontroller: 'SigninCtrl',\n\t\tcontrollerAs: '$ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'SIGNIN',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.recoverPassword', {\n\t\turl: '/recoverPassword',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authRecover;\n\t\t},\n\t\tcontroller: 'RecoverPasswordCtrl',\n\t\tcontrollerAs: '$ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'RECOVER',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.accessDenied', {\n\t\turl: '/accessDenied',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authAccessDenied;\n\t\t},\n\t\tcontroller: 'AccessDeniedCtrl',\n\t\tcontrollerAs: '$ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCESS_DENIED',\n\t\t\tauthorities: []\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'SIGNIN': 'Identification',\n\t\t'SIGNIN_INTRO': 'Identifiez-vous pour démarrer votre session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'J\\'ai oublié mon mot de passe ...',\n\t\t'SIGNIN_USERNAME': 'Identifiant',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'L\\'identifiant est obligatoire',\n\t\t'SIGNIN_PASSWORD': 'Mot de passe',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'SIGNIN_SUBMIT': 'Démarrer la session',\n\t\t'SIGNIN_LOADING': 'Données en cours de chargement',\n\t\t'SIGNIN_ERROR_TITLE': 'Erreur d\\'authentification',\n\t\t'SIGNIN_ERROR_MESSAGE': 'Identifiant ou mot de passe incorrect.',\n\t\t'RECOVER': 'Récupération de mot de passe',\n\t\t'RECOVER_INTRO': 'Saisissez votre email pour récupérer votre mot de passe',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'L\\'email est obligatoire',\n\t\t'RECOVER_MAIL_EMAIL': 'L\\'email n\\'est pas au bon format',\n\t\t'RECOVER_SUBMIT': 'Récupérer mon mot de passe',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Retour à l\\'identificaition',\n\t\t'RECOVER_SUCCESS': 'Consultez votre email pour connaître comment réinitialiser votre mot de passe.',\n\t\t'RECOVER_ERROR_TITLE': 'Erreur',\n\t\t'RECOVER_ERROR_GENERIC': 'Erreur lors de la récupération du mot de passe.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'L\\'email n\\'existe pas',\n\t\t'ACCESS_DENIED_BACK_TO_HOME': 'Retour à l\\'accueil',\n\t\t'ACCESS_DENIED': 'Accès interdit',\n\t\t'ACCESS_DENIED_INTRO': 'Vous n\\'avez pas suffisamment de droits d\\'accéder à cette page.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'SIGNIN': 'Signin',\n\t\t'SIGNIN_INTRO': 'Sign in to start your session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'I forgot my password ...',\n\t\t'SIGNIN_USERNAME': 'Username',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'Username is required',\n\t\t'SIGNIN_PASSWORD': 'Password',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Password is required',\n\t\t'SIGNIN_SUBMIT': 'Start session',\n\t\t'SIGNIN_LOADING': 'Loading user informations',\n\t\t'SIGNIN_ERROR_TITLE': 'Authentication error',\n\t\t'SIGNIN_ERROR_MESSAGE': 'Username or password are incorrect.',\n\t\t'RECOVER': 'Recover password',\n\t\t'RECOVER_INTRO': 'Set your email to recover your password',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'Email is required',\n\t\t'RECOVER_MAIL_EMAIL': 'Email does not respect the right format',\n\t\t'RECOVER_SUBMIT': 'Retrieve my password',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Back to signin',\n\t\t'RECOVER_SUCCESS': 'Check your e-mails for details on how to reset your password.',\n\t\t'RECOVER_ERROR_TITLE': 'Error',\n\t\t'RECOVER_ERROR_GENERIC': 'Recovering error.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'E-Mail address isn\\'t registered! Please check and try again',\n\t\t'ACCESS_DENIED_BACK_TO_HOME': 'Back to home',\n\t\t'ACCESS_DENIED': 'Access denied',\n\t\t'ACCESS_DENIED_INTRO': 'You do not have enough privileges to access this page.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('RecoverPasswordCtrl', [\"$filter\", \"$ionicPopup\", \"principalService\", function($filter, $ionicPopup, principalService) {\n\tvar ctrl = this;\n\tctrl.recover = function(userEmail) {\n\t\tctrl.recoverSuccess = false;\n\t\tctrl.recoverError = false;\n\t\tctrl.errorEmailNotExists = false;\n\t\tctrl.loading = true;\n\t\tprincipalService.resetPasswordInit(userEmail).then(function() {\n\t\t\tctrl.recoverSuccess = true;\n\t\t}).catch(function(response) {\n\t\t\tvar messageKey = 'RECOVER_ERROR_GENERIC';\n\t\t\tif (response.status === 400 && response.data === 'e-mail address not registered') {\n\t\t\t\tmessageKey = 'RECOVER_ERROR_EMAIL_NOT_EXIST';\n\t\t\t}\n\t\t\tvar translateFn = $filter('translate');\n\t\t\t$ionicPopup.alert({\n\t\t\t\ttitle: translateFn('RECOVER_ERROR_TITLE'),\n\t\t\t\ttemplate: translateFn(messageKey)\n\t\t\t});\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('SigninCtrl', [\"$rootScope\", \"$state\", \"authService\", \"$filter\", \"$ionicPopup\", function($rootScope, $state, authService, $filter, $ionicPopup) {\n\tvar ctrl = this;\n\tctrl.loading = false;\n\tctrl.signin = function(userName, userPassword) {\n\t\tctrl.loading = true;\n\t\tauthService.login(userName, userPassword).then(function() {\n\t\t\tconsole.log('user is logged in in both ionic and backend, rediret to app.main');\n\t\t\t$state.go('app.main');\n\t\t}).catch(function(rejection) {\n\t\t\tctrl.rejection = rejection;\n\t\t\tconsole.error('error while signing in', rejection);\n\t\t\tvar translateFn = $filter('translate');\n\t\t\t$ionicPopup.alert({\n\t\t\t\ttitle: translateFn('SIGNIN_ERROR_TITLE'),\n\t\t\t\ttemplate: translateFn('SIGNIN_ERROR_MESSAGE')\n\t\t\t});\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'BTN_SIGNOUT': 'Déconnexion'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'BTN_SIGNOUT': 'Sign out'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-mobile').component('btnSignout', {\n\ttemplateUrl: 'adama-mobile/btn-signout/btn-signout.html',\n\tcontroller: [\"authService\", \"$state\", function(authService, $state) {\n\t\tvar ctrl = this;\n\t\tctrl.signout = function() {\n\t\t\tauthService.logout();\n\t\t\t$state.go('auth.signin');\n\t\t};\n\t}]\n});\n","'use strict';\n\nangular.module('adama-mobile').directive('dsBinaryFileUrl', [\"$parse\", \"binaryFileService\", function($parse, binaryFileService) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar updateOutput = function(binaryFileList) {\n\t\t\t\tif (attrs.output) {\n\t\t\t\t\tbinaryFileList = angular.copy(binaryFileList);\n\t\t\t\t}\n\t\t\t\tif (!angular.isArray(binaryFileList)) {\n\t\t\t\t\tbinaryFileList = [binaryFileList];\n\t\t\t\t}\n\t\t\t\tbinaryFileService.initUrlForBinaryFiles(binaryFileList).then(function() {\n\t\t\t\t\tif (attrs.output) {\n\t\t\t\t\t\t$parse(attrs.output).assign(scope, binaryFileList);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tscope.$watch(attrs.input, function() {\n\t\t\t\tvar binaryFileList = $parse(attrs.input)(scope);\n\t\t\t\tif (binaryFileList) {\n\t\t\t\t\tupdateOutput(binaryFileList);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').directive('dsLanguage', [\"$parse\", \"language\", function($parse, language) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tlanguage.getAll().then(function(languages) {\n\t\t\t\t$parse(attrs.data).assign(scope, languages);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').directive('dsPrincipalIdentity', [\"$rootScope\", \"$parse\", \"principalService\", function($rootScope, $parse, principalService) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\t$rootScope.$on('principal-new', function(event, data) {\n\t\t\t\t$parse(attrs.data).assign(scope, data.principal);\n\t\t\t});\n\t\t\t$rootScope.$on('principal-remove', function() {\n\t\t\t\t$parse(attrs.data).assign(scope, undefined);\n\t\t\t});\n\t\t\tprincipalService.getPrincipal().then(function(principal) {\n\t\t\t\t$parse(attrs.data).assign(scope, principal);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('User', [\"$resource\", \"adamaConstant\", \"adamaResourceConfig\", function($resource, adamaConstant, adamaResourceConfig) {\n\tvar config = angular.extend({}, adamaResourceConfig, {\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tlogin: '@login'\n\t\t\t}\n\t\t}\n\t});\n\treturn $resource(adamaConstant.apiBase + 'users/:login', {}, config);\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('authExpiredInterceptor', [\"$injector\", \"$q\", \"adamaConstant\", function($injector, $q, adamaConstant) {\n\tvar getHttpService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('$http'));\n\t\t};\n\t}());\n\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\treturn {\n\t\tresponseError: function(response) {\n\t\t\tvar config = response.config;\n\t\t\tif (response.status === 401 && config.url.indexOf(adamaConstant.apiBase) === 0) {\n\t\t\t\tconsole.log('authExpiredInterceptor error 401, refresh token', config.url);\n\t\t\t\treturn getAdamaTokenService().refreshAndGetToken().then(function() {\n\t\t\t\t\tconsole.log('authExpiredInterceptor token is refresh, reset Authorization header');\n\t\t\t\t\tconfig.headers['Authorization'] = undefined;\n\t\t\t\t\treturn getHttpService()(config);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn $q.reject(response);\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('authInterceptor', [\"$injector\", \"adamaConstant\", function($injector, adamaConstant) {\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\treturn {\n\t\t// Add authorization token to headers\n\t\trequest: function(config) {\n\t\t\tconsole.log('authInterceptor', config.url);\n\t\t\tconfig.headers = config.headers || {};\n\t\t\tif (!config.headers['Authorization'] && config.url.indexOf(adamaConstant.apiBase) === 0) {\n\t\t\t\tconsole.log('authInterceptor need authorization, getting token');\n\t\t\t\treturn getAdamaTokenService().getToken().then(function(token) {\n\t\t\t\t\tconsole.log('authInterceptor adding Authorization header', token);\n\t\t\t\t\tif (token) {\n\t\t\t\t\t\tconfig.headers['Authorization'] = 'Bearer ' + token;\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn config;\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('adamaResourceConfig', [\"ParseLinks\", function(ParseLinks) {\n\treturn {\n\t\t'query': {\n\t\t\tmethod: 'GET',\n\t\t\tisArray: true,\n\t\t\ttransformResponse: function(data, headers, status) {\n\t\t\t\tdata = angular.fromJson(data);\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tdata.$metadata = {\n\t\t\t\t\t\tlinks: ParseLinks.parse(headers('link')),\n\t\t\t\t\t\ttotalItems: headers('X-Total-Count')\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t},\n\t\t\tinterceptor: {\n\t\t\t\tresponse: function(response) {\n\t\t\t\t\tresponse.resource.$metadata = response.data.$metadata;\n\t\t\t\t\treturn response.resource;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'get': {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\t'save': {\n\t\t\tmethod: 'POST'\n\t\t},\n\t\t'update': {\n\t\t\tmethod: 'PUT'\n\t\t},\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tid: '@id'\n\t\t\t}\n\t\t}\n\t};\n}]);\n","/* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n/* jshint camelcase:false */\n\n'use strict';\n\nangular.module('adama-mobile').factory('adamaTokenService', [\"$rootScope\", \"$http\", \"$q\", \"$state\", \"$ionicUser\", \"jwtHelper\", \"adamaConstant\", function($rootScope, $http, $q, $state, $ionicUser, jwtHelper, adamaConstant) {\n\tvar api = {};\n\n\tvar ionicUser = $ionicUser.current();\n\t$rootScope.$on('ionicuser-new', function() {\n\t\tconsole.log('adamaTokenService update ionicUser');\n\t\tionicUser = $ionicUser.current();\n\t});\n\n\tapi.getToken = function() {\n\t\tconsole.log('adamaTokenService.getToken');\n\t\tvar token;\n\t\tif (ionicUser.isAuthenticated()) {\n\t\t\tconsole.log('adamaTokenService.getToken user is authenticated');\n\t\t\ttoken = ionicUser.get('access_token');\n\t\t\tif (jwtHelper.isTokenExpired(token)) {\n\t\t\t\tconsole.log('adamaTokenService.getToken token is expired');\n\t\t\t\treturn api.refreshAndGetToken();\n\t\t\t}\n\t\t}\n\t\treturn $q.when(token);\n\t};\n\n\tapi.refreshAndGetToken = function() {\n\t\tconsole.log('adamaTokenService.refreshAndGetToken');\n\t\tvar token = ionicUser.get('access_token');\n\t\tif (!token) {\n\t\t\t// FIXME should not occur as ionicUser should always have a\n\t\t\t// access_token\n\t\t\tconsole.error('no token, redirect to signin');\n\t\t\t$state.go('auth.signin');\n\t\t\treturn $q.reject('refreshAndGetToken : no token');\n\t\t}\n\t\tconsole.log('adamaTokenService.refreshAndGetToken token', token);\n\t\tvar refreshToken = ionicUser.get('refresh_token');\n\t\tconsole.log('adamaTokenService.refreshAndGetToken refreshToken', refreshToken);\n\t\treturn $http({\n\t\t\tmethod: 'POST',\n\t\t\turl: adamaConstant.apiBase + 'login/refresh',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t'refresh_token': refreshToken\n\t\t\t}\n\t\t}).then(function(response) {\n\t\t\tvar newToken = response.data.access_token;\n\t\t\tconsole.log('adamaTokenService.refreshAndGetToken newToken', newToken);\n\t\t\tionicUser.set('access_token', newToken);\n\t\t\treturn ionicUser.save().then(function() {\n\t\t\t\treturn newToken;\n\t\t\t});\n\t\t}, function(rejection) {\n\t\t\tconsole.error('error while refreshing user token, redirect to signin', rejection);\n\t\t\t$state.go('auth.signin');\n\t\t\treturn $q.reject(rejection);\n\t\t});\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').constant('adamaConstant', {\n\tapiBase: 'http://localhost:13337/',\n\tadamaMobileToolkitTemplateUrl: {\n\t\tapp: 'adama-mobile/app.html',\n\t\tauthAccessDenied: 'adama-mobile/auth/accessDenied.html',\n\t\tauthSignin: 'adama-mobile/auth/signin.html',\n\t\tauthRecover: 'adama-mobile/auth/recoverPassword.html'\n\t},\n\tenableBadge: false,\n\tenablePush: false,\n\turlResetPassword: 'path/to/reset/password?isMobile=true'\n});\n","'use strict';\n\nangular.module('adama-mobile').factory('authService', [\"$rootScope\", \"$http\", \"$ionicAuth\", \"adamaConstant\", \"principalService\", function($rootScope, $http, $ionicAuth, adamaConstant, principalService) {\n\tvar api = {};\n\n\tapi.login = function(username, password) {\n\t\tconsole.log('login', username);\n\t\tvar authOptions = {\n\t\t\tremember: true\n\t\t};\n\t\tvar data = {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t};\n\t\treturn $ionicAuth.login('custom', authOptions, data).then(function() {\n\t\t\tconsole.log('login is ok, ask custom auth server to refresh the user data');\n\t\t\treturn $http({\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: adamaConstant.apiBase + 'externalLogin/refreshUserExternal',\n\t\t\t\tdata: {\n\t\t\t\t\texternalId: username\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(function() {\n\t\t\tconsole.log('refreshing custom auth server is ok, ask the backend for the updated user info');\n\t\t\t$rootScope.$broadcast('ionicuser-new');\n\t\t\t// get the new user information from ionic\n\t\t\treturn principalService.resetPrincipal();\n\t\t});\n\t};\n\n\tapi.logout = function() {\n\t\tconsole.log('logout');\n\t\t$ionicAuth.logout();\n\t\tprincipalService.deletePrincipal();\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('binaryFileService', [\"$http\", \"$q\", \"adamaConstant\", function($http, $q, adamaConstant) {\n\tvar api = {};\n\n\tapi.initUrlForBinaryFiles = function(binaryFileList) {\n\t\tvar workingList = [];\n\t\tvar idList = [];\n\t\tangular.forEach(binaryFileList, function(binaryFile) {\n\t\t\tif (binaryFile && binaryFile.id && !binaryFile.url) {\n\t\t\t\tworkingList.push(binaryFile);\n\t\t\t\tidList.push(binaryFile.id);\n\t\t\t}\n\t\t});\n\t\tif (idList.length) {\n\t\t\treturn $http({\n\t\t\t\tmethod: 'PUT',\n\t\t\t\turl: adamaConstant.apiBase + 'files',\n\t\t\t\tdata: angular.toJson(idList)\n\t\t\t}).then(function(response) {\n\t\t\t\tangular.forEach(workingList, function(binaryFile) {\n\t\t\t\t\tbinaryFile.url = response.data.urlList[binaryFile.id];\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn $q.when();\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').provider('language', function() {\n\tvar languages = ['en', 'fr'];\n\tvar selectorData = [{\n\t\tcode: 'en',\n\t\tlabelKey: 'FLAG_EN',\n\t\tcssCLass: 'us'\n\t}, {\n\t\tcode: 'fr',\n\t\tlabelKey: 'FLAG_FR',\n\t\tcssCLass: 'fr'\n\t}];\n\n\tthis.setLanguages = function(newLanguages) {\n\t\tlanguages = newLanguages;\n\t};\n\n\tthis.setSelectorData = function(newSelectorData) {\n\t\tselectorData = newSelectorData;\n\t};\n\n\tthis.$get = [\"$q\", \"$http\", \"$translate\", function($q, $http, $translate) {\n\t\tvar api = {};\n\n\t\tapi.getCurrent = function() {\n\t\t\tvar language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\t\t\tif (angular.isUndefined(language)) {\n\t\t\t\tlanguage = 'en';\n\t\t\t}\n\t\t\treturn $q.when(language);\n\t\t};\n\n\t\tapi.getAll = function() {\n\t\t\treturn $q.when(languages);\n\t\t};\n\n\t\tapi.getSelectorData = function() {\n\t\t\treturn $q.when(selectorData);\n\t\t};\n\n\t\treturn api;\n\t}];\n});\n","'use strict';\n\nangular.module('adama-mobile').factory('pageTitle', [\"$rootScope\", \"$filter\", function($rootScope, $filter) {\n\tvar translateFn = $filter('translate');\n\tvar api = {};\n\n\tapi.set = function(pageTitleKey) {\n\t\tvar newTitle = translateFn(pageTitleKey);\n\t\t$rootScope.pageTitle = newTitle;\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').service('ParseLinks', function() {\n\tthis.parse = function(header) {\n\t\tif (header.length === 0) {\n\t\t\tthrow new Error('input must not be of zero length');\n\t\t}\n\n\t\t// Split parts by comma\n\t\tvar parts = header.split(',');\n\t\tvar links = {};\n\t\t// Parse each part into a named link\n\t\tangular.forEach(parts, function(p) {\n\t\t\tvar section = p.split(';');\n\t\t\tif (section.length !== 2) {\n\t\t\t\tthrow new Error('section could not be split on \";\"');\n\t\t\t}\n\t\t\tvar url = section[0].replace(/<(.*)>/, '$1').trim();\n\t\t\tvar queryString = {};\n\t\t\turl.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), function($0, $1, $2, $3) {\n\t\t\t\tqueryString[$1] = $3;\n\t\t\t});\n\t\t\tvar page = queryString.page;\n\t\t\tif (angular.isString(page)) {\n\t\t\t\tpage = parseInt(page);\n\t\t\t}\n\t\t\tvar name = section[1].replace(/rel='(.*)'/, '$1').trim();\n\t\t\tlinks[name] = page;\n\t\t});\n\n\t\treturn links;\n\t};\n});\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('principalService', [\"$rootScope\", \"$q\", \"$http\", \"$resource\", \"$state\", \"$ionicUser\", \"adamaConstant\", function($rootScope, $q, $http, $resource, $state, $ionicUser, adamaConstant) {\n\tvar api = {};\n\tvar principalPromise;\n\tvar ionicUser = $ionicUser.current();\n\tvar isAuthenticated = ionicUser.isAuthenticated();\n\tvar accountResource = $resource(adamaConstant.apiBase + 'account', {}, {});\n\tvar passwordResource = $resource(adamaConstant.apiBase + 'account/change_password', {}, {});\n\tvar passwordResetInitResource = $resource(adamaConstant.apiBase + 'account/reset_password/init', {}, {});\n\n\tapi.isAuthenticated = function() {\n\t\treturn isAuthenticated;\n\t};\n\n\tapi.resetPrincipal = function() {\n\t\tvar result;\n\t\tionicUser = $ionicUser.current();\n\t\tisAuthenticated = ionicUser.isAuthenticated();\n\t\tconsole.log('resetPrincipal');\n\t\tconsole.log('resetPrincipal ionicUser', ionicUser);\n\t\tconsole.log('resetPrincipal isAuthenticated', isAuthenticated);\n\t\tif (isAuthenticated) {\n\t\t\tvar externalId = ionicUser.details['external_id'];\n\t\t\tif (!externalId) {\n\t\t\t\t// FIXME should not occur, every ionicuser should have an\n\t\t\t\t// external_id\n\t\t\t\tconsole.error('no external_id, redirect to signin');\n\t\t\t\tresult = $q.reject('resetPrincipal : no external_id');\n\t\t\t} else {\n\t\t\t\tprincipalPromise = $http({\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: adamaConstant.apiBase + 'users/byLogin/' + externalId\n\t\t\t\t}).then(function(response) {\n\t\t\t\t\tvar principal = response.data;\n\t\t\t\t\tisAuthenticated = true;\n\t\t\t\t\t$rootScope.$broadcast('principal-new', {\n\t\t\t\t\t\tprincipal: principal\n\t\t\t\t\t});\n\t\t\t\t\treturn principal;\n\t\t\t\t});\n\t\t\t\tresult = principalPromise;\n\t\t\t}\n\t\t\t// if (!externalId) {\n\t\t\t// // FIXME external_id should be in details, not directly into\n\t\t\t// ionicUser\n\t\t\t// externalId = ionicUser['external_id'];\n\t\t\t// }\n\t\t\t// if (!externalId) {\n\t\t\t// // FIXME should not occur, every ionicuser should have an\n\t\t\t// external_id\n\t\t\t// principalPromise = $q.reject('not logged');\n\t\t\t// } else {\n\t\t\t// var token = ionicUser.get('access_token');\n\t\t\t// if (!token) {\n\t\t\t// principalPromise = $http({\n\t\t\t// method: 'GET',\n\t\t\t// headers: {\n\t\t\t// 'Authorization': 'Bearer ' + token\n\t\t\t// },\n\t\t\t// url: adamaConstant.apiBase + 'users/byLogin/' + externalId\n\t\t\t// }).then(function(response) {\n\t\t\t// var principal = response.data;\n\t\t\t// isAuthenticated = true;\n\t\t\t// $rootScope.$broadcast('principal-new', {\n\t\t\t// principal: principal\n\t\t\t// });\n\t\t\t// return principal;\n\t\t\t// });\n\t\t\t// } else {\n\t\t\t// principalPromise = $q.reject('not logged');\n\t\t\t// }\n\t\t\t// }\n\t\t} else {\n\t\t\tconsole.error('user is not authenticated');\n\t\t\tresult = $q.reject('resetPrincipal : not authenticated');\n\t\t}\n\t\treturn result.catch(function(rejection) {\n\t\t\tconsole.log('there was a problem while reseting user info, redirect to signin');\n\t\t\tisAuthenticated = false;\n\t\t\tprincipalPromise = undefined;\n\t\t\t$state.go('auth.signin');\n\t\t\treturn $q.reject(rejection);\n\t\t});\n\t};\n\n\tapi.getPrincipal = function() {\n\t\tif (!principalPromise) {\n\t\t\treturn api.resetPrincipal();\n\t\t}\n\t\treturn principalPromise;\n\t};\n\n\tapi.deletePrincipal = function() {\n\t\tisAuthenticated = false;\n\t\tprincipalPromise = undefined;\n\t\t$rootScope.$broadcast('principal-remove');\n\t};\n\n\tapi.hasAnyAuthority = function(authorities) {\n\t\tconsole.log('hasAnyAuthority', authorities);\n\t\t// TODO\n\t\treturn true;\n\t};\n\n\tapi.resetPasswordInit = function(mail) {\n\t\tconsole.log('resetPasswordInit', mail);\n\t\treturn passwordResetInitResource.save({\n\t\t\tmail: mail,\n\t\t\turlResetPassword: adamaConstant.urlResetPassword\n\t\t}).$promise;\n\t};\n\n\tapi.updateAccount = function(principal) {\n\t\tconsole.log('updateAccount', principal);\n\t\treturn accountResource.save(principal, function() {\n\t\t\t$rootScope.$emit('principal-update', {\n\t\t\t\tprincipal: principal\n\t\t\t});\n\t\t\tprincipalPromise = $q.when(principal);\n\t\t}).$promise;\n\t};\n\n\tapi.changePassword = function(newPassword) {\n\t\tconsole.log('changePassword');\n\t\treturn passwordResource.save({\n\t\t\tpassword: newPassword\n\t\t}).$promise;\n\t};\n\n\treturn api;\n}]);\n"],"sourceRoot":"/source/"}