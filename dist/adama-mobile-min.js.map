{"version":3,"sources":["app.js","app-config.js","btn-signout/app.js","btn-signout/btn-signout.directive.js","auth/accessDenied.controller.js","auth/app.js","auth/recoverPassword.controller.js","auth/signin.controller.js","datasources/binary-file-url.datasource.js","datasources/language.datasource.js","datasources/principal-identity.datasource.js","resources/user.resource.js","interceptors/auth-expired.interceptor.js","interceptors/auth.interceptor.js","services/adama-resource-config.service.js","services/adama-token.service.js","services/adama.constant.js","services/auth.service.js","services/binary-file.service.js","services/language.provider.js","services/loading.service.js","services/notifications.service.js","services/page-title.service.js","services/parse-links.service.js","services/principal.service.js"],"names":["angular","module","run","$ionicPlatform","ready","window","cordova","plugins","Keyboard","hideKeyboardAccessoryBar","disableScroll","StatusBar","styleDefault","config","$urlRouterProvider","otherwise","$injector","$state","get","go","$translateProvider","useSanitizeValueStrategy","useLocalStorage","registerAvailableLanguageKeys","en_*","fr_*","determinePreferredLanguage","fallbackLanguage","$stateProvider","adamaConstant","state","abstract","url","templateUrl","adamaMobileToolkitTemplateUrl","app","$rootScope","pageTitle","$on","event","toState","data","set","$httpProvider","interceptors","push","principalService","authorities","length","isAuthenticated","hasAnyAuthority","toParams","fromState","fromParams","error","$cordovaBadge","enableBadge","on","clear","logEnhancerProvider","prefixPattern","datetimePattern","logLevels","*","LEVEL","OFF","translations","BTN_SIGNOUT","component","bindings","additionalClass","controller","authService","ctrl","this","signout","logout","template","authSignin","controllerAs","authRecover","authAccessDenied","SIGNIN","SIGNIN_INTRO","SIGNIN_FORGET_PASSWORD","SIGNIN_USERNAME","SIGNIN_USERNAME_REQUIRED","SIGNIN_PASSWORD","SIGNIN_PASSWORD_REQUIRED","SIGNIN_SUBMIT","SIGNIN_LOADING","SIGNIN_ERROR_TITLE","SIGNIN_ERROR_MESSAGE","RECOVER","RECOVER_INTRO","RECOVER_MAIL","RECOVER_MAIL_REQUIRED","RECOVER_MAIL_EMAIL","RECOVER_SUBMIT","RECOVER_BACK_TO_LOGIN","RECOVER_SUCCESS","RECOVER_ERROR_TITLE","RECOVER_ERROR_GENERIC","RECOVER_ERROR_EMAIL_NOT_EXIST","ACCESS_DENIED_BACK_TO_HOME","ACCESS_DENIED","ACCESS_DENIED_INTRO","$filter","$ionicPopup","recover","userEmail","recoverSuccess","recoverError","errorEmailNotExists","loading","resetPasswordInit","then","catch","response","messageKey","status","translateFn","alert","title","finally","$log","log","getInstance","signin","userName","userPassword","login","debug","rejection","info","directive","$parse","binaryFileService","scope","link","element","attrs","updateOutput","binaryFileList","output","copy","isArray","initUrlForBinaryFiles","assign","$watch","input","language","getAll","languages","principal","undefined","getPrincipal","factory","$resource","adamaResourceConfig","extend","delete","method","params","id","apiBase","$q","getHttpService","service","getAdamaTokenService","getStateService","responseError","indexOf","refreshAndGetToken","headers","reject","request","getToken","token","ParseLinks","query","transformResponse","fromJson","$metadata","links","parse","totalItems","interceptor","resource","save","update","$http","localStorageService","jwtHelper","api","isTokenExpired","when","refreshToken","Authorization","refresh_token","newToken","access_token","constant","enablePush","urlResetPassword","username","password","deletePrincipal","workingList","idList","forEach","binaryFile","toJson","urlList","provider","selectorData","code","labelKey","cssCLass","setLanguages","newLanguages","setSelectorData","newSelectorData","$get","$translate","getCurrent","storage","isUndefined","getSelectorData","$ionicLoading","blockUiWhileResolving","promise","$$state","show","hide","$cordovaToast","pageTitleKey","newTitle","header","Error","parts","split","p","section","replace","trim","queryString","RegExp","$0","$1","$2","$3","page","isString","parseInt","name","principalPromise","accountResource","passwordResource","passwordResetInitResource","resetPrincipal","result","externalId","$broadcast","mail","$promise","updateAccount","$emit","changePassword","newPassword"],"mappings":"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","file":"adama-mobile-min.js","sourcesContent":["'use strict';\n\nangular.module('adama-mobile', [ //\n\t'ionic', //\n\t'ionic.service.core', //\n\t'ionic.service.auth', //\n\t'ionic.service.deploy', //\n\t'ionic.service.push', //\n\t'pascalprecht.translate', //\n\t'ngCookies', //\n\t'ngResource', //\n\t'LocalStorageModule', //\n\t'ngCordova', //\n\t'angular-jwt', //\n\t'angular-logger', //\n\t'ngMessages' //\n]);\n","/* globals StatusBar:false, cordova: false */\n\n'use strict';\n\nangular.module('adama-mobile').run([\"$ionicPlatform\", function($ionicPlatform) {\n\t$ionicPlatform.ready(function() {\n\t\tif (window.cordova && window.cordova.plugins.Keyboard) {\n\t\t\t// Hide the accessory bar by default (remove this to show the\n\t\t\t// accessory bar above the keyboard for form inputs)\n\t\t\tcordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n\n\t\t\t// Don't remove this line unless you know what you are doing. It\n\t\t\t// stops the viewport from snapping when text inputs are focused.\n\t\t\t// Ionic handles this internally for a much nicer keyboard\n\t\t\t// experience.\n\t\t\tcordova.plugins.Keyboard.disableScroll(true);\n\t\t}\n\t\tif (window.StatusBar) {\n\t\t\tStatusBar.styleDefault();\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$urlRouterProvider\", function($urlRouterProvider) {\n\t// see https://github.com/angular-ui/ui-router/issues/600#issuecomment-47228922\n\t$urlRouterProvider.otherwise(function($injector) {\n\t\tvar $state = $injector.get('$state');\n\t\t$state.go('app.main');\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.useSanitizeValueStrategy('escapeParameters');\n\n\t$translateProvider.useLocalStorage();\n\n\t$translateProvider.registerAvailableLanguageKeys(['en', 'fr'], {\n\t\t'en_*': 'en',\n\t\t'fr_*': 'fr'\n\t});\n\n\t$translateProvider.determinePreferredLanguage().fallbackLanguage('en');\n}]);\n\nangular.module('adama-mobile').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('app', {\n\t\tabstract: true,\n\t\turl: '/app',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.app;\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"pageTitle\", function($rootScope, pageTitle) {\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState) {\n\t\tif (toState && toState.data && toState.data.pageTitle) {\n\t\t\tpageTitle.set(toState.data.pageTitle);\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$httpProvider\", function($httpProvider) {\n\t$httpProvider.interceptors.push('authExpiredInterceptor');\n\t$httpProvider.interceptors.push('authInterceptor');\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$state\", \"principalService\", function($rootScope, $state, principalService) {\n\t$rootScope.$on('$stateChangeStart', function(event, toState) {\n\t\tif (toState.data && toState.data.authorities && toState.data.authorities.length > 0) {\n\t\t\t// state needs at least one authority\n\t\t\tif (!principalService.isAuthenticated()) {\n\t\t\t\t// send user to the signin state so user can log in\n\t\t\t\t$state.go('auth.signin');\n\t\t\t} else {\n\t\t\t\tif (!principalService.hasAnyAuthority(toState.data.authorities)) {\n\t\t\t\t\t// user is signed in but not authorized for desired state\n\t\t\t\t\t$state.go('auth.accessDenied');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", function($rootScope) {\n\t$rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n\t\tthrow error;\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$injector\", \"adamaConstant\", function($rootScope, $injector, adamaConstant) {\n\tvar $ionicPlatform, $cordovaBadge;\n\tif (adamaConstant.enableBadge) {\n\t\t$ionicPlatform = $injector.get('$ionicPlatform');\n\t\t$cordovaBadge = $injector.get('$cordovaBadge');\n\t\t$ionicPlatform.on('resume', function() {\n\t\t\t$cordovaBadge.clear();\n\t\t});\n\n\t\t$ionicPlatform.ready(function() {\n\t\t\t$cordovaBadge.clear();\n\t\t});\n\t}\n}]);\n\nangular.module('adama-mobile').config([\"logEnhancerProvider\", function(logEnhancerProvider) {\n\tlogEnhancerProvider.prefixPattern = '%s::[%s]>';\n\tlogEnhancerProvider.datetimePattern = 'DD/MM/YYYY HH:mm:ss';\n\tlogEnhancerProvider.logLevels = {\n\t\t'*': logEnhancerProvider.LEVEL.OFF\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'BTN_SIGNOUT': 'Déconnexion'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'BTN_SIGNOUT': 'Sign out'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-mobile').component('btnSignout', {\n\ttemplateUrl: 'adama-mobile/btn-signout/btn-signout.html',\n\tbindings: {\n\t\tadditionalClass: '@'\n\t},\n\tcontroller: [\"authService\", \"$state\", function(authService, $state) {\n\t\tvar ctrl = this;\n\t\tctrl.signout = function() {\n\t\t\tauthService.logout();\n\t\t\t$state.go('auth.signin');\n\t\t};\n\t}]\n});\n","'use strict';\n\nangular.module('adama-mobile').controller('AccessDeniedCtrl', function() {\n\t// nothing to do\n});\n","'use strict';\n\nangular.module('adama-mobile').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('auth', {\n\t\tabstract: true,\n\t\turl: '/auth',\n\t\ttemplate: '' + //\n\t\t\t'<ui-view></ui-view>' + //\n\t\t\t''\n\t});\n\n\t$stateProvider.state('auth.signin', {\n\t\turl: '/',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authSignin;\n\t\t},\n\t\tcontroller: 'SigninCtrl',\n\t\tcontrollerAs: '$ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'SIGNIN',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.recoverPassword', {\n\t\turl: '/recoverPassword',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authRecover;\n\t\t},\n\t\tcontroller: 'RecoverPasswordCtrl',\n\t\tcontrollerAs: '$ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'RECOVER',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.accessDenied', {\n\t\turl: '/accessDenied',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authAccessDenied;\n\t\t},\n\t\tcontroller: 'AccessDeniedCtrl',\n\t\tcontrollerAs: '$ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCESS_DENIED',\n\t\t\tauthorities: []\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'SIGNIN': 'Identification',\n\t\t'SIGNIN_INTRO': 'Identifiez-vous pour démarrer votre session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'J\\'ai oublié mon mot de passe ...',\n\t\t'SIGNIN_USERNAME': 'Identifiant',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'L\\'identifiant est obligatoire',\n\t\t'SIGNIN_PASSWORD': 'Mot de passe',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'SIGNIN_SUBMIT': 'Démarrer la session',\n\t\t'SIGNIN_LOADING': 'Données en cours de chargement',\n\t\t'SIGNIN_ERROR_TITLE': 'Erreur d\\'authentification',\n\t\t'SIGNIN_ERROR_MESSAGE': 'Identifiant ou mot de passe incorrect.',\n\t\t'RECOVER': 'Récupération de mot de passe',\n\t\t'RECOVER_INTRO': 'Saisissez votre email pour récupérer votre mot de passe',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'L\\'email est obligatoire',\n\t\t'RECOVER_MAIL_EMAIL': 'L\\'email n\\'est pas au bon format',\n\t\t'RECOVER_SUBMIT': 'Récupérer mon mot de passe',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Retour à l\\'identificaition',\n\t\t'RECOVER_SUCCESS': 'Consultez votre email pour connaître comment réinitialiser votre mot de passe.',\n\t\t'RECOVER_ERROR_TITLE': 'Erreur',\n\t\t'RECOVER_ERROR_GENERIC': 'Erreur lors de la récupération du mot de passe.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'L\\'email n\\'existe pas',\n\t\t'ACCESS_DENIED_BACK_TO_HOME': 'Retour à l\\'accueil',\n\t\t'ACCESS_DENIED': 'Accès interdit',\n\t\t'ACCESS_DENIED_INTRO': 'Vous n\\'avez pas suffisamment de droits d\\'accéder à cette page.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'SIGNIN': 'Signin',\n\t\t'SIGNIN_INTRO': 'Sign in to start your session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'I forgot my password ...',\n\t\t'SIGNIN_USERNAME': 'Username',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'Username is required',\n\t\t'SIGNIN_PASSWORD': 'Password',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Password is required',\n\t\t'SIGNIN_SUBMIT': 'Start session',\n\t\t'SIGNIN_LOADING': 'Loading user informations',\n\t\t'SIGNIN_ERROR_TITLE': 'Authentication error',\n\t\t'SIGNIN_ERROR_MESSAGE': 'Username or password are incorrect.',\n\t\t'RECOVER': 'Recover password',\n\t\t'RECOVER_INTRO': 'Set your email to recover your password',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'Email is required',\n\t\t'RECOVER_MAIL_EMAIL': 'Email does not respect the right format',\n\t\t'RECOVER_SUBMIT': 'Retrieve my password',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Back to signin',\n\t\t'RECOVER_SUCCESS': 'Check your e-mails for details on how to reset your password.',\n\t\t'RECOVER_ERROR_TITLE': 'Error',\n\t\t'RECOVER_ERROR_GENERIC': 'Recovering error.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'E-Mail address isn\\'t registered! Please check and try again',\n\t\t'ACCESS_DENIED_BACK_TO_HOME': 'Back to home',\n\t\t'ACCESS_DENIED': 'Access denied',\n\t\t'ACCESS_DENIED_INTRO': 'You do not have enough privileges to access this page.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('RecoverPasswordCtrl', [\"$filter\", \"$ionicPopup\", \"principalService\", function($filter, $ionicPopup, principalService) {\n\tvar ctrl = this;\n\tctrl.recover = function(userEmail) {\n\t\tctrl.recoverSuccess = false;\n\t\tctrl.recoverError = false;\n\t\tctrl.errorEmailNotExists = false;\n\t\tctrl.loading = true;\n\t\tprincipalService.resetPasswordInit(userEmail).then(function() {\n\t\t\tctrl.recoverSuccess = true;\n\t\t}).catch(function(response) {\n\t\t\tvar messageKey = 'RECOVER_ERROR_GENERIC';\n\t\t\tif (response.status === 400 && response.data === 'e-mail address not registered') {\n\t\t\t\tmessageKey = 'RECOVER_ERROR_EMAIL_NOT_EXIST';\n\t\t\t}\n\t\t\tvar translateFn = $filter('translate');\n\t\t\t$ionicPopup.alert({\n\t\t\t\ttitle: translateFn('RECOVER_ERROR_TITLE'),\n\t\t\t\ttemplate: translateFn(messageKey)\n\t\t\t});\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('SigninCtrl', [\"$rootScope\", \"$state\", \"$log\", \"authService\", \"$filter\", \"$ionicPopup\", function($rootScope, $state, $log, authService, $filter, $ionicPopup) {\n\tvar log = $log.getInstance('adama-mobile.auth.signin');\n\tvar ctrl = this;\n\tctrl.loading = false;\n\tctrl.signin = function(userName, userPassword) {\n\t\tctrl.loading = true;\n\t\tauthService.login(userName, userPassword).then(function() {\n\t\t\tlog.debug('user is logged, rediret to app.main');\n\t\t\t$state.go('app.main');\n\t\t\tctrl.loading = false;\n\t\t}).catch(function(rejection) {\n\t\t\tlog.info('error while signing in', rejection);\n\t\t\tctrl.rejection = rejection;\n\t\t\tvar translateFn = $filter('translate');\n\t\t\t$ionicPopup.alert({\n\t\t\t\ttitle: translateFn('SIGNIN_ERROR_TITLE'),\n\t\t\t\ttemplate: translateFn('SIGNIN_ERROR_MESSAGE')\n\t\t\t});\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').directive('dsBinaryFileUrl', [\"$parse\", \"binaryFileService\", function($parse, binaryFileService) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar updateOutput = function(binaryFileList) {\n\t\t\t\tif (attrs.output) {\n\t\t\t\t\tbinaryFileList = angular.copy(binaryFileList);\n\t\t\t\t}\n\t\t\t\tif (!angular.isArray(binaryFileList)) {\n\t\t\t\t\tbinaryFileList = [binaryFileList];\n\t\t\t\t}\n\t\t\t\tbinaryFileService.initUrlForBinaryFiles(binaryFileList).then(function() {\n\t\t\t\t\tif (attrs.output) {\n\t\t\t\t\t\t$parse(attrs.output).assign(scope, binaryFileList);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tscope.$watch(attrs.input, function() {\n\t\t\t\tvar binaryFileList = $parse(attrs.input)(scope);\n\t\t\t\tif (binaryFileList) {\n\t\t\t\t\tupdateOutput(binaryFileList);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').directive('dsLanguage', [\"$parse\", \"language\", function($parse, language) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tlanguage.getAll().then(function(languages) {\n\t\t\t\t$parse(attrs.data).assign(scope, languages);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').directive('dsPrincipalIdentity', [\"$rootScope\", \"$parse\", \"principalService\", function($rootScope, $parse, principalService) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\t$rootScope.$on('principal-new', function(event, data) {\n\t\t\t\t$parse(attrs.data).assign(scope, data.principal);\n\t\t\t});\n\t\t\t$rootScope.$on('principal-remove', function() {\n\t\t\t\t$parse(attrs.data).assign(scope, undefined);\n\t\t\t});\n\t\t\tprincipalService.getPrincipal().then(function(principal) {\n\t\t\t\t$parse(attrs.data).assign(scope, principal);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('User', [\"$resource\", \"adamaConstant\", \"adamaResourceConfig\", function($resource, adamaConstant, adamaResourceConfig) {\n\tvar config = angular.extend({}, adamaResourceConfig, {\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tid: '@id'\n\t\t\t}\n\t\t}\n\t});\n\treturn $resource(adamaConstant.apiBase + 'users/:id', {}, config);\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('authExpiredInterceptor', [\"$injector\", \"$q\", \"$log\", \"adamaConstant\", function($injector, $q, $log, adamaConstant) {\n\tvar getHttpService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('$http'));\n\t\t};\n\t}());\n\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\tvar getStateService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('$state'));\n\t\t};\n\t}());\n\n\treturn {\n\t\tresponseError: function(response) {\n\t\t\tvar config = response.config;\n\t\t\tif (response.status === 401 && config.url.indexOf(adamaConstant.apiBase) === 0) {\n\t\t\t\tvar log = $log.getInstance('adama-mobile.interceptors.authExpiredInterceptor');\n\t\t\t\tlog.debug('error 401, refresh token', config.url);\n\t\t\t\treturn getAdamaTokenService().refreshAndGetToken().then(function() {\n\t\t\t\t\tlog.debug('token is refresh, reset Authorization header');\n\t\t\t\t\tconfig.headers['Authorization'] = undefined;\n\t\t\t\t\treturn getHttpService()(config);\n\t\t\t\t}, function(rejection) {\n\t\t\t\t\treturn getStateService().go('auth.signin').then(function() {\n\t\t\t\t\t\tlog.debug('error while getting user token', rejection);\n\t\t\t\t\t\treturn $q.reject(rejection);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn $q.reject(response);\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('authInterceptor', [\"$injector\", \"$q\", \"$log\", \"adamaConstant\", function($injector, $q, $log, adamaConstant) {\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\tvar getStateService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('$state'));\n\t\t};\n\t}());\n\n\treturn {\n\t\t// Add authorization token to headers\n\t\trequest: function(config) {\n\t\t\tvar log = $log.getInstance('adama-mobile.interceptors.authInterceptor');\n\t\t\tlog.debug('url', config.url);\n\t\t\tconfig.headers = config.headers || {};\n\t\t\tif (!config.headers['Authorization'] && config.url.indexOf(adamaConstant.apiBase) === 0) {\n\t\t\t\tlog.debug('need authorization, getting token');\n\t\t\t\treturn getAdamaTokenService().getToken().then(function(token) {\n\t\t\t\t\tlog.debug('adding Authorization header', token);\n\t\t\t\t\tif (token) {\n\t\t\t\t\t\tconfig.headers['Authorization'] = 'Bearer ' + token;\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t}, function(rejection) {\n\t\t\t\t\treturn getStateService().go('auth.signin').then(function() {\n\t\t\t\t\t\tlog.debug('error while getting user token', rejection);\n\t\t\t\t\t\treturn $q.reject(rejection);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn config;\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('adamaResourceConfig', [\"ParseLinks\", function(ParseLinks) {\n\treturn {\n\t\t'query': {\n\t\t\tmethod: 'GET',\n\t\t\tisArray: true,\n\t\t\ttransformResponse: function(data, headers, status) {\n\t\t\t\tdata = angular.fromJson(data);\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tdata.$metadata = {\n\t\t\t\t\t\tlinks: ParseLinks.parse(headers('link')),\n\t\t\t\t\t\ttotalItems: headers('X-Total-Count')\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t},\n\t\t\tinterceptor: {\n\t\t\t\tresponse: function(response) {\n\t\t\t\t\tresponse.resource.$metadata = response.data.$metadata;\n\t\t\t\t\treturn response.resource;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'get': {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\t'save': {\n\t\t\tmethod: 'POST'\n\t\t},\n\t\t'update': {\n\t\t\tmethod: 'PUT'\n\t\t},\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tid: '@id'\n\t\t\t}\n\t\t}\n\t};\n}]);\n","/* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n/* jshint camelcase:false */\n\n'use strict';\n\nangular.module('adama-mobile').factory('adamaTokenService', [\"$rootScope\", \"$http\", \"$q\", \"$state\", \"localStorageService\", \"$log\", \"jwtHelper\", \"adamaConstant\", function($rootScope, $http, $q, $state, localStorageService, $log, jwtHelper, adamaConstant) {\n\tvar log = $log.getInstance('adama-mobile.services.adamaTokenService');\n\tvar api = {};\n\n\tapi.getToken = function() {\n\t\tlog.debug('getToken');\n\t\tvar token = localStorageService.get('access_token');\n\t\tif (token) {\n\t\t\tlog.debug('adamaTokenService.getToken user is authenticated');\n\t\t\tif (token && jwtHelper.isTokenExpired(token)) {\n\t\t\t\tlog.debug('adamaTokenService.getToken token is expired');\n\t\t\t\treturn api.refreshAndGetToken();\n\t\t\t}\n\t\t}\n\t\treturn $q.when(token);\n\t};\n\n\tapi.refreshAndGetToken = function() {\n\t\tlog.debug('adamaTokenService.refreshAndGetToken');\n\t\tvar token = localStorageService.get('access_token');\n\t\tif (!token) {\n\t\t\tlog.info('no token, redirect to signin');\n\t\t\treturn $q.reject('refreshAndGetToken : no token !!!!');\n\t\t}\n\t\tlog.debug('adamaTokenService.refreshAndGetToken token', token);\n\t\tvar refreshToken = localStorageService.get('refresh_token');\n\t\tlog.debug('adamaTokenService.refreshAndGetToken refreshToken', refreshToken);\n\t\treturn $http({\n\t\t\tmethod: 'POST',\n\t\t\turl: adamaConstant.apiBase + 'login/refresh',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t'refresh_token': refreshToken\n\t\t\t}\n\t\t}).then(function(response) {\n\t\t\tvar newToken = response.data.access_token;\n\t\t\tlog.debug('adamaTokenService.refreshAndGetToken newToken', newToken);\n\t\t\tlocalStorageService.set('access_token', newToken);\n\t\t\treturn newToken;\n\t\t}, function(rejection) {\n\t\t\tlog.info('error while refreshing user token, redirect to signin', rejection);\n\t\t\treturn $q.reject(rejection);\n\t\t});\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').constant('adamaConstant', {\n\tapiBase: 'http://localhost:13337/',\n\tadamaMobileToolkitTemplateUrl: {\n\t\tapp: 'adama-mobile/app.html',\n\t\tauthAccessDenied: 'adama-mobile/auth/accessDenied.html',\n\t\tauthSignin: 'adama-mobile/auth/signin.html',\n\t\tauthRecover: 'adama-mobile/auth/recoverPassword.html'\n\t},\n\tenableBadge: false,\n\tenablePush: false,\n\turlResetPassword: 'path/to/reset/password?origin=mobile'\n});\n","/* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n/* jshint camelcase:false */\n\n'use strict';\n\nangular.module('adama-mobile').factory('authService', [\"$rootScope\", \"$http\", \"localStorageService\", \"$log\", \"adamaConstant\", \"principalService\", function($rootScope, $http, localStorageService, $log, adamaConstant, principalService) {\n\tvar log = $log.getInstance('adama-mobile.services.authService');\n\tvar api = {};\n\n\tapi.login = function(username, password) {\n\t\tlog.debug('login', username);\n\t\tvar data = {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t};\n\n\t\treturn $http({\n\t\t\tmethod: 'POST',\n\t\t\turl: adamaConstant.apiBase + 'login/authenticate',\n\t\t\tdata: data\n\t\t}).then(function(response) {\n\t\t\tlog.debug('User is authenticated');\n\t\t\tlocalStorageService.set('access_token', response.data.access_token);\n\t\t\tlocalStorageService.set('refresh_token', response.data.refresh_token);\n\t\t\tlocalStorageService.set('external_id', username);\n\t\t});\n\t};\n\n\tapi.logout = function() {\n\t\tlog.debug('logout');\n\t\tlocalStorageService.set('access_token', undefined);\n\t\tlocalStorageService.set('refresh_token', undefined);\n\t\tlocalStorageService.set('external_id', undefined);\n\t\tprincipalService.deletePrincipal();\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('binaryFileService', [\"$http\", \"$q\", \"adamaConstant\", function($http, $q, adamaConstant) {\n\tvar api = {};\n\n\tapi.initUrlForBinaryFiles = function(binaryFileList) {\n\t\tvar workingList = [];\n\t\tvar idList = [];\n\t\tangular.forEach(binaryFileList, function(binaryFile) {\n\t\t\tif (binaryFile && binaryFile.id && !binaryFile.url) {\n\t\t\t\tworkingList.push(binaryFile);\n\t\t\t\tidList.push(binaryFile.id);\n\t\t\t}\n\t\t});\n\t\tif (idList.length) {\n\t\t\treturn $http({\n\t\t\t\tmethod: 'PUT',\n\t\t\t\turl: adamaConstant.apiBase + 'files',\n\t\t\t\tdata: angular.toJson(idList)\n\t\t\t}).then(function(response) {\n\t\t\t\tangular.forEach(workingList, function(binaryFile) {\n\t\t\t\t\tbinaryFile.url = response.data.urlList[binaryFile.id];\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn $q.when();\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').provider('language', function() {\n\tvar languages = ['en', 'fr'];\n\tvar selectorData = [{\n\t\tcode: 'en',\n\t\tlabelKey: 'FLAG_EN',\n\t\tcssCLass: 'us'\n\t}, {\n\t\tcode: 'fr',\n\t\tlabelKey: 'FLAG_FR',\n\t\tcssCLass: 'fr'\n\t}];\n\n\tthis.setLanguages = function(newLanguages) {\n\t\tlanguages = newLanguages;\n\t};\n\n\tthis.setSelectorData = function(newSelectorData) {\n\t\tselectorData = newSelectorData;\n\t};\n\n\tthis.$get = [\"$q\", \"$http\", \"$translate\", function($q, $http, $translate) {\n\t\tvar api = {};\n\n\t\tapi.getCurrent = function() {\n\t\t\tvar language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\t\t\tif (angular.isUndefined(language)) {\n\t\t\t\tlanguage = 'en';\n\t\t\t}\n\t\t\treturn $q.when(language);\n\t\t};\n\n\t\tapi.getAll = function() {\n\t\t\treturn $q.when(languages);\n\t\t};\n\n\t\tapi.getSelectorData = function() {\n\t\t\treturn $q.when(selectorData);\n\t\t};\n\n\t\treturn api;\n\t}];\n});\n","'use strict';\n\nangular.module('adama-mobile').factory('loadingService', [\"$filter\", \"$ionicLoading\", function($filter, $ionicLoading) {\n\tvar api = {};\n\tvar translateFn = $filter('translate');\n\n\tapi.blockUiWhileResolving = function(messageKey, promise) {\n\t\tif (promise.$$state.status === 0) {\n\t\t\t$ionicLoading.show({\n\t\t\t\ttemplate: translateFn(messageKey)\n\t\t\t});\n\t\t}\n\t\treturn promise.finally(function() {\n\t\t\t$ionicLoading.hide();\n\t\t});\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('notificationsService', [\"$filter\", \"$cordovaToast\", \"$log\", function($filter, $cordovaToast, $log) {\n\tvar log = $log.getInstance('adama-mobile.services.notificationsService');\n\tvar api = {};\n\tvar translateFn = $filter('translate');\n\n\tapi.show = function(messageKey) {\n\t\tlog.debug('show', messageKey);\n\t\treturn $cordovaToast.show(translateFn(messageKey), 'short', 'bottom');\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('pageTitle', [\"$rootScope\", \"$filter\", function($rootScope, $filter) {\n\tvar translateFn = $filter('translate');\n\tvar api = {};\n\n\tapi.set = function(pageTitleKey, data) {\n\t\tvar newTitle = translateFn(pageTitleKey, data);\n\t\t$rootScope.pageTitle = newTitle;\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').service('ParseLinks', function() {\n\tthis.parse = function(header) {\n\t\tif (header.length === 0) {\n\t\t\tthrow new Error('input must not be of zero length');\n\t\t}\n\n\t\t// Split parts by comma\n\t\tvar parts = header.split(',');\n\t\tvar links = {};\n\t\t// Parse each part into a named link\n\t\tangular.forEach(parts, function(p) {\n\t\t\tvar section = p.split(';');\n\t\t\tif (section.length !== 2) {\n\t\t\t\tthrow new Error('section could not be split on \";\"');\n\t\t\t}\n\t\t\tvar url = section[0].replace(/<(.*)>/, '$1').trim();\n\t\t\tvar queryString = {};\n\t\t\turl.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), function($0, $1, $2, $3) {\n\t\t\t\tqueryString[$1] = $3;\n\t\t\t});\n\t\t\tvar page = queryString.page;\n\t\t\tif (angular.isString(page)) {\n\t\t\t\tpage = parseInt(page);\n\t\t\t}\n\t\t\tvar name = section[1].replace(/rel='(.*)'/, '$1').trim();\n\t\t\tlinks[name] = page;\n\t\t});\n\n\t\treturn links;\n\t};\n});\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('principalService', [\"$rootScope\", \"$q\", \"$http\", \"$resource\", \"$state\", \"localStorageService\", \"$log\", \"adamaConstant\", function($rootScope, $q, $http, $resource, $state, localStorageService, $log, adamaConstant) {\n\tvar log = $log.getInstance('adama-mobile.services.principalService');\n\tvar api = {};\n\tvar principalPromise;\n\tvar isAuthenticated = localStorageService.get('access_token') ? true : false;\n\tvar accountResource = $resource(adamaConstant.apiBase + 'account', {}, {});\n\tvar passwordResource = $resource(adamaConstant.apiBase + 'account/change_password', {}, {});\n\tvar passwordResetInitResource = $resource(adamaConstant.apiBase + 'account/reset_password/init', {}, {});\n\n\tapi.isAuthenticated = function() {\n\t\treturn isAuthenticated;\n\t};\n\n\tapi.resetPrincipal = function() {\n\t\tvar result;\n\t\tisAuthenticated = localStorageService.get('access_token') ? true : false;\n\t\tlog.debug('resetPrincipal');\n\t\tlog.debug('resetPrincipal isAuthenticated', isAuthenticated);\n\t\tif (isAuthenticated) {\n\t\t\tvar externalId = localStorageService.get('external_id');\n\t\t\tif (!externalId) {\n\t\t\t\tlog.info('no external_id, redirect to signin');\n\t\t\t\tresult = $q.reject('resetPrincipal : no external_id');\n\t\t\t} else {\n\t\t\t\tprincipalPromise = $http({\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: adamaConstant.apiBase + 'users/byLogin/' + externalId\n\t\t\t\t}).then(function(response) {\n\t\t\t\t\tvar principal = response.data;\n\t\t\t\t\tisAuthenticated = true;\n\t\t\t\t\t$rootScope.$broadcast('principal-new', {\n\t\t\t\t\t\tprincipal: principal\n\t\t\t\t\t});\n\t\t\t\t\treturn principal;\n\t\t\t\t});\n\t\t\t\tresult = principalPromise;\n\t\t\t}\n\t\t} else {\n\t\t\tlog.info('user is not authenticated');\n\t\t\tresult = $q.reject('resetPrincipal : not authenticated');\n\t\t}\n\t\treturn result.catch(function(rejection) {\n\t\t\tlog.debug('there was a problem while reseting user info, redirect to signin');\n\t\t\tisAuthenticated = false;\n\t\t\tprincipalPromise = undefined;\n\t\t\t$state.go('auth.signin');\n\t\t\treturn $q.reject(rejection);\n\t\t});\n\t};\n\n\tapi.getPrincipal = function() {\n\t\tif (!principalPromise) {\n\t\t\treturn api.resetPrincipal();\n\t\t}\n\t\treturn principalPromise;\n\t};\n\n\tapi.deletePrincipal = function() {\n\t\tisAuthenticated = false;\n\t\tprincipalPromise = undefined;\n\t\t$rootScope.$broadcast('principal-remove');\n\t};\n\n\tapi.hasAnyAuthority = function(authorities) {\n\t\tlog.debug('hasAnyAuthority', authorities);\n\t\t// TODO\n\t\treturn true;\n\t};\n\n\tapi.resetPasswordInit = function(mail) {\n\t\tlog.debug('resetPasswordInit', mail);\n\t\treturn passwordResetInitResource.save({\n\t\t\tmail: mail,\n\t\t\turlResetPassword: adamaConstant.urlResetPassword\n\t\t}).$promise;\n\t};\n\n\tapi.updateAccount = function(principal) {\n\t\tlog.debug('updateAccount', principal);\n\t\treturn accountResource.save(principal, function() {\n\t\t\t$rootScope.$emit('principal-update', {\n\t\t\t\tprincipal: principal\n\t\t\t});\n\t\t\tprincipalPromise = $q.when(principal);\n\t\t}).$promise;\n\t};\n\n\tapi.changePassword = function(newPassword) {\n\t\tlog.debug('changePassword');\n\t\treturn passwordResource.save({\n\t\t\tpassword: newPassword\n\t\t}).$promise;\n\t};\n\n\treturn api;\n}]);\n"],"sourceRoot":"/source/"}