{"version":3,"sources":["app.js","app-config.js","auth/accessDenied.controller.js","auth/app.js","auth/recoverPassword.controller.js","auth/signin.controller.js","btn-signout/app.js","btn-signout/btn-signout.directive.js","datasources/binary-file-url.datasource.js","datasources/language.datasource.js","datasources/principal-identity.datasource.js","interceptors/auth-expired.interceptor.js","interceptors/auth.interceptor.js","resources/user.resource.js","services/adama-resource-config.service.js","services/adama-token.service.js","services/adama.constant.js","services/auth.service.js","services/binary-file.service.js","services/language.provider.js","services/loading.service.js","services/notifications.service.js","services/page-title.service.js","services/parse-links.service.js","services/principal.service.js"],"names":["angular","module","run","$ionicPlatform","ready","window","cordova","plugins","Keyboard","hideKeyboardAccessoryBar","disableScroll","StatusBar","styleDefault","config","$urlRouterProvider","otherwise","$injector","$state","get","go","$translateProvider","useSanitizeValueStrategy","useLocalStorage","registerAvailableLanguageKeys","en_*","fr_*","determinePreferredLanguage","fallbackLanguage","$stateProvider","adamaConstant","state","abstract","url","templateUrl","adamaMobileToolkitTemplateUrl","app","$rootScope","pageTitle","$on","event","toState","data","set","$httpProvider","interceptors","push","principalService","authorities","length","isAuthenticated","hasAnyAuthority","toParams","fromState","fromParams","error","$cordovaBadge","enableBadge","on","clear","$ionicPush","$ionicUser","enablePush","init","debug","onNotification","notification","$apply","payload","getPayload","console","log","asleep","closed","onRegister","token","canShowAlert","canSetBadge","canPlaySound","canRunActionsOnWake","current","register","saveToken","unregister","controller","template","authSignin","controllerAs","authRecover","authAccessDenied","translations","SIGNIN","SIGNIN_INTRO","SIGNIN_FORGET_PASSWORD","SIGNIN_USERNAME","SIGNIN_USERNAME_REQUIRED","SIGNIN_PASSWORD","SIGNIN_PASSWORD_REQUIRED","SIGNIN_SUBMIT","SIGNIN_LOADING","SIGNIN_ERROR_TITLE","SIGNIN_ERROR_MESSAGE","RECOVER","RECOVER_INTRO","RECOVER_MAIL","RECOVER_MAIL_REQUIRED","RECOVER_MAIL_EMAIL","RECOVER_SUBMIT","RECOVER_BACK_TO_LOGIN","RECOVER_SUCCESS","RECOVER_ERROR_TITLE","RECOVER_ERROR_GENERIC","RECOVER_ERROR_EMAIL_NOT_EXIST","ACCESS_DENIED_BACK_TO_HOME","ACCESS_DENIED","ACCESS_DENIED_INTRO","$filter","$ionicPopup","ctrl","this","recover","userEmail","recoverSuccess","recoverError","errorEmailNotExists","loading","resetPasswordInit","then","response","messageKey","status","translateFn","alert","title","authService","signin","userName","userPassword","login","rejection","BTN_SIGNOUT","component","signout","logout","directive","$parse","binaryFileService","scope","link","element","attrs","updateOutput","binaryFileList","output","copy","isArray","initUrlForBinaryFiles","assign","$watch","input","language","getAll","languages","principal","undefined","getPrincipal","factory","$q","getHttpService","service","getAdamaTokenService","getStateService","responseError","indexOf","apiBase","refreshAndGetToken","headers","reject","request","getToken","$resource","adamaResourceConfig","extend","delete","method","params","id","ParseLinks","query","transformResponse","fromJson","$metadata","links","parse","totalItems","interceptor","resource","save","update","$http","jwtHelper","api","ionicUser","isTokenExpired","when","JSON","stringify","refreshToken","Authorization","refresh_token","newToken","access_token","constant","urlResetPassword","$ionicAuth","username","password","authOptions","remember","externalId","$broadcast","resetPrincipal","deletePrincipal","workingList","idList","forEach","binaryFile","toJson","urlList","provider","selectorData","code","labelKey","cssCLass","setLanguages","newLanguages","setSelectorData","newSelectorData","$get","$translate","getCurrent","storage","isUndefined","getSelectorData","$ionicLoading","blockUiWhileResolving","promise","$$state","show","hide","$cordovaToast","pageTitleKey","newTitle","header","Error","parts","split","p","section","replace","trim","queryString","RegExp","$0","$1","$2","$3","page","isString","parseInt","name","principalPromise","accountResource","passwordResource","passwordResetInitResource","result","details","mail","$promise","updateAccount","$emit","changePassword","newPassword"],"mappings":"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","file":"adama-mobile-min.js","sourcesContent":["'use strict';\n\nangular.module('adama-mobile', [ //\n\t'ionic', //\n\t'ionic.service.core', //\n\t'ionic.service.auth', //\n\t'ionic.service.deploy', //\n\t'ionic.service.push', //\n\t'pascalprecht.translate', //\n\t'ngCookies', //\n\t'ngResource', //\n\t'LocalStorageModule', //\n\t'ngCordova', //\n\t'angular-jwt', //\n\t'ngMessages' //\n]);\n","/* globals StatusBar:false, cordova: false */\n\n'use strict';\n\nangular.module('adama-mobile').run([\"$ionicPlatform\", function($ionicPlatform) {\n\t$ionicPlatform.ready(function() {\n\t\tif (window.cordova && window.cordova.plugins.Keyboard) {\n\t\t\t// Hide the accessory bar by default (remove this to show the\n\t\t\t// accessory bar above the keyboard for form inputs)\n\t\t\tcordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n\n\t\t\t// Don't remove this line unless you know what you are doing. It\n\t\t\t// stops the viewport from snapping when text inputs are focused.\n\t\t\t// Ionic handles this internally for a much nicer keyboard\n\t\t\t// experience.\n\t\t\tcordova.plugins.Keyboard.disableScroll(true);\n\t\t}\n\t\tif (window.StatusBar) {\n\t\t\tStatusBar.styleDefault();\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$urlRouterProvider\", function($urlRouterProvider) {\n\t// see https://github.com/angular-ui/ui-router/issues/600#issuecomment-47228922\n\t$urlRouterProvider.otherwise(function($injector) {\n\t\tvar $state = $injector.get('$state');\n\t\t$state.go('app.main');\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.useSanitizeValueStrategy('escapeParameters');\n\n\t$translateProvider.useLocalStorage();\n\n\t$translateProvider.registerAvailableLanguageKeys(['en', 'fr'], {\n\t\t'en_*': 'en',\n\t\t'fr_*': 'fr'\n\t});\n\n\t$translateProvider.determinePreferredLanguage().fallbackLanguage('en');\n}]);\n\nangular.module('adama-mobile').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('app', {\n\t\tabstract: true,\n\t\turl: '/app',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.app;\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"pageTitle\", function($rootScope, pageTitle) {\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState) {\n\t\tif (toState && toState.data && toState.data.pageTitle) {\n\t\t\tpageTitle.set(toState.data.pageTitle);\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$httpProvider\", function($httpProvider) {\n\t$httpProvider.interceptors.push('authExpiredInterceptor');\n\t$httpProvider.interceptors.push('authInterceptor');\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$state\", \"principalService\", function($rootScope, $state, principalService) {\n\t$rootScope.$on('$stateChangeStart', function(event, toState) {\n\t\tif (toState.data && toState.data.authorities && toState.data.authorities.length > 0) {\n\t\t\t// state needs at least one authority\n\t\t\tif (!principalService.isAuthenticated()) {\n\t\t\t\t// send user to the signin state so user can log in\n\t\t\t\t$state.go('auth.signin');\n\t\t\t} else {\n\t\t\t\tif (!principalService.hasAnyAuthority(toState.data.authorities)) {\n\t\t\t\t\t// user is signed in but not authorized for desired state\n\t\t\t\t\t$state.go('auth.accessDenied');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", function($rootScope) {\n\t$rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n\t\tthrow error;\n\t});\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$injector\", \"adamaConstant\", function($rootScope, $injector, adamaConstant) {\n\tvar $ionicPlatform, $cordovaBadge;\n\tif (adamaConstant.enableBadge) {\n\t\t$ionicPlatform = $injector.get('$ionicPlatform');\n\t\t$cordovaBadge = $injector.get('$cordovaBadge');\n\t\t$ionicPlatform.on('resume', function() {\n\t\t\t$cordovaBadge.clear();\n\t\t});\n\n\t\t$ionicPlatform.ready(function() {\n\t\t\t$cordovaBadge.clear();\n\t\t});\n\t}\n}]);\n\nangular.module('adama-mobile').run([\"$rootScope\", \"$injector\", \"adamaConstant\", function($rootScope, $injector, adamaConstant) {\n\tvar $ionicPlatform, $ionicPush, $ionicUser;\n\tif (adamaConstant.enablePush) {\n\t\t$ionicPlatform = $injector.get('$ionicPlatform');\n\t\t$ionicPush = $injector.get('$ionicPush');\n\t\t$ionicUser = $injector.get('$ionicUser');\n\t\t$ionicPlatform.ready(function() {\n\t\t\t$ionicPush.init({\n\t\t\t\tdebug: false,\n\t\t\t\tonNotification: function(notification) {\n\t\t\t\t\t$rootScope.$apply(function() {\n\t\t\t\t\t\t// TODO notification management\n\t\t\t\t\t\tvar payload = $ionicPush.getPayload(notification);\n\t\t\t\t\t\tconsole.log('notification, payload', notification, payload);\n\t\t\t\t\t\t$rootScope.notification = notification;\n\t\t\t\t\t\t$rootScope.payload = payload;\n\t\t\t\t\t\tif (notification.app.asleep || notification.app.closed) {\n\t\t\t\t\t\t\t// $state.go('tab.push');\n\t\t\t\t\t\t\tconsole.log('application was asleep or closed');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonRegister: function(data) {\n\t\t\t\t\tconsole.log('Device token', data.token);\n\t\t\t\t},\n\t\t\t\tcanShowAlert: false,\n\t\t\t\tcanSetBadge: true,\n\t\t\t\tcanPlaySound: true,\n\t\t\t\tcanRunActionsOnWake: true\n\t\t\t});\n\t\t\tif ($ionicUser.current().isAuthenticated()) {\n\t\t\t\t$ionicPush.register(function(data) {\n\t\t\t\t\tconsole.log('register at startup ok', data);\n\t\t\t\t\t$ionicPush.saveToken(data);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$ionicPush.unregister();\n\t\t\t}\n\t\t});\n\t\t$rootScope.$on('ionicuser-new', function() {\n\t\t\t$ionicPush.register(function(data) {\n\t\t\t\tconsole.log('register after signing in ok', data);\n\t\t\t});\n\t\t});\n\t\t$rootScope.$on('principal-remove', function() {\n\t\t\t$ionicPush.unregister();\n\t\t});\n\t}\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('AccessDeniedCtrl', function() {\n\t// nothing to do\n});\n","'use strict';\n\nangular.module('adama-mobile').config([\"$stateProvider\", \"adamaConstant\", function($stateProvider, adamaConstant) {\n\t$stateProvider.state('auth', {\n\t\tabstract: true,\n\t\turl: '/auth',\n\t\ttemplate: '' + //\n\t\t\t'<ui-view></ui-view>' + //\n\t\t\t''\n\t});\n\n\t$stateProvider.state('auth.signin', {\n\t\turl: '/',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authSignin;\n\t\t},\n\t\tcontroller: 'SigninCtrl',\n\t\tcontrollerAs: '$ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'SIGNIN',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.recoverPassword', {\n\t\turl: '/recoverPassword',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authRecover;\n\t\t},\n\t\tcontroller: 'RecoverPasswordCtrl',\n\t\tcontrollerAs: '$ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'RECOVER',\n\t\t\tauthorities: []\n\t\t}\n\t});\n\n\t$stateProvider.state('auth.accessDenied', {\n\t\turl: '/accessDenied',\n\t\ttemplateUrl: function() {\n\t\t\treturn adamaConstant.adamaMobileToolkitTemplateUrl.authAccessDenied;\n\t\t},\n\t\tcontroller: 'AccessDeniedCtrl',\n\t\tcontrollerAs: '$ctrl',\n\t\tdata: {\n\t\t\tpageTitle: 'ACCESS_DENIED',\n\t\t\tauthorities: []\n\t\t}\n\t});\n}]);\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'SIGNIN': 'Identification',\n\t\t'SIGNIN_INTRO': 'Identifiez-vous pour démarrer votre session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'J\\'ai oublié mon mot de passe ...',\n\t\t'SIGNIN_USERNAME': 'Identifiant',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'L\\'identifiant est obligatoire',\n\t\t'SIGNIN_PASSWORD': 'Mot de passe',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Le mot de passe est obligatoire',\n\t\t'SIGNIN_SUBMIT': 'Démarrer la session',\n\t\t'SIGNIN_LOADING': 'Données en cours de chargement',\n\t\t'SIGNIN_ERROR_TITLE': 'Erreur d\\'authentification',\n\t\t'SIGNIN_ERROR_MESSAGE': 'Identifiant ou mot de passe incorrect.',\n\t\t'RECOVER': 'Récupération de mot de passe',\n\t\t'RECOVER_INTRO': 'Saisissez votre email pour récupérer votre mot de passe',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'L\\'email est obligatoire',\n\t\t'RECOVER_MAIL_EMAIL': 'L\\'email n\\'est pas au bon format',\n\t\t'RECOVER_SUBMIT': 'Récupérer mon mot de passe',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Retour à l\\'identificaition',\n\t\t'RECOVER_SUCCESS': 'Consultez votre email pour connaître comment réinitialiser votre mot de passe.',\n\t\t'RECOVER_ERROR_TITLE': 'Erreur',\n\t\t'RECOVER_ERROR_GENERIC': 'Erreur lors de la récupération du mot de passe.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'L\\'email n\\'existe pas',\n\t\t'ACCESS_DENIED_BACK_TO_HOME': 'Retour à l\\'accueil',\n\t\t'ACCESS_DENIED': 'Accès interdit',\n\t\t'ACCESS_DENIED_INTRO': 'Vous n\\'avez pas suffisamment de droits d\\'accéder à cette page.'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'SIGNIN': 'Signin',\n\t\t'SIGNIN_INTRO': 'Sign in to start your session',\n\t\t'SIGNIN_FORGET_PASSWORD': 'I forgot my password ...',\n\t\t'SIGNIN_USERNAME': 'Username',\n\t\t'SIGNIN_USERNAME_REQUIRED': 'Username is required',\n\t\t'SIGNIN_PASSWORD': 'Password',\n\t\t'SIGNIN_PASSWORD_REQUIRED': 'Password is required',\n\t\t'SIGNIN_SUBMIT': 'Start session',\n\t\t'SIGNIN_LOADING': 'Loading user informations',\n\t\t'SIGNIN_ERROR_TITLE': 'Authentication error',\n\t\t'SIGNIN_ERROR_MESSAGE': 'Username or password are incorrect.',\n\t\t'RECOVER': 'Recover password',\n\t\t'RECOVER_INTRO': 'Set your email to recover your password',\n\t\t'RECOVER_MAIL': 'Email',\n\t\t'RECOVER_MAIL_REQUIRED': 'Email is required',\n\t\t'RECOVER_MAIL_EMAIL': 'Email does not respect the right format',\n\t\t'RECOVER_SUBMIT': 'Retrieve my password',\n\t\t'RECOVER_BACK_TO_LOGIN': 'Back to signin',\n\t\t'RECOVER_SUCCESS': 'Check your e-mails for details on how to reset your password.',\n\t\t'RECOVER_ERROR_TITLE': 'Error',\n\t\t'RECOVER_ERROR_GENERIC': 'Recovering error.',\n\t\t'RECOVER_ERROR_EMAIL_NOT_EXIST': 'E-Mail address isn\\'t registered! Please check and try again',\n\t\t'ACCESS_DENIED_BACK_TO_HOME': 'Back to home',\n\t\t'ACCESS_DENIED': 'Access denied',\n\t\t'ACCESS_DENIED_INTRO': 'You do not have enough privileges to access this page.'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('RecoverPasswordCtrl', [\"$filter\", \"$ionicPopup\", \"principalService\", function($filter, $ionicPopup, principalService) {\n\tvar ctrl = this;\n\tctrl.recover = function(userEmail) {\n\t\tctrl.recoverSuccess = false;\n\t\tctrl.recoverError = false;\n\t\tctrl.errorEmailNotExists = false;\n\t\tctrl.loading = true;\n\t\tprincipalService.resetPasswordInit(userEmail).then(function() {\n\t\t\tctrl.recoverSuccess = true;\n\t\t}).catch(function(response) {\n\t\t\tvar messageKey = 'RECOVER_ERROR_GENERIC';\n\t\t\tif (response.status === 400 && response.data === 'e-mail address not registered') {\n\t\t\t\tmessageKey = 'RECOVER_ERROR_EMAIL_NOT_EXIST';\n\t\t\t}\n\t\t\tvar translateFn = $filter('translate');\n\t\t\t$ionicPopup.alert({\n\t\t\t\ttitle: translateFn('RECOVER_ERROR_TITLE'),\n\t\t\t\ttemplate: translateFn(messageKey)\n\t\t\t});\n\t\t}).finally(function() {\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').controller('SigninCtrl', [\"$rootScope\", \"$state\", \"authService\", \"$filter\", \"$ionicPopup\", function($rootScope, $state, authService, $filter, $ionicPopup) {\n\tvar ctrl = this;\n\tctrl.loading = false;\n\tctrl.signin = function(userName, userPassword) {\n\t\tctrl.loading = true;\n\t\tauthService.login(userName, userPassword).then(function() {\n\t\t\tconsole.log('user is logged, rediret to app.main');\n\t\t\t$state.go('app.main');\n\t\t\tctrl.loading = false;\n\t\t}).catch(function(rejection) {\n\t\t\tconsole.error('error while signing in', rejection);\n\t\t\tctrl.rejection = rejection;\n\t\t\tvar translateFn = $filter('translate');\n\t\t\t$ionicPopup.alert({\n\t\t\t\ttitle: translateFn('SIGNIN_ERROR_TITLE'),\n\t\t\t\ttemplate: translateFn('SIGNIN_ERROR_MESSAGE')\n\t\t\t});\n\t\t\tctrl.loading = false;\n\t\t});\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').config([\"$translateProvider\", function($translateProvider) {\n\t$translateProvider.translations('fr', {\n\t\t'BTN_SIGNOUT': 'Déconnexion'\n\t});\n\n\t$translateProvider.translations('en', {\n\t\t'BTN_SIGNOUT': 'Sign out'\n\t});\n}]);\n","'use strict';\n\nangular.module('adama-mobile').component('btnSignout', {\n\ttemplateUrl: 'adama-mobile/btn-signout/btn-signout.html',\n\tcontroller: [\"authService\", \"$state\", function(authService, $state) {\n\t\tvar ctrl = this;\n\t\tctrl.signout = function() {\n\t\t\tauthService.logout();\n\t\t\t$state.go('auth.signin');\n\t\t};\n\t}]\n});\n","'use strict';\n\nangular.module('adama-mobile').directive('dsBinaryFileUrl', [\"$parse\", \"binaryFileService\", function($parse, binaryFileService) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar updateOutput = function(binaryFileList) {\n\t\t\t\tif (attrs.output) {\n\t\t\t\t\tbinaryFileList = angular.copy(binaryFileList);\n\t\t\t\t}\n\t\t\t\tif (!angular.isArray(binaryFileList)) {\n\t\t\t\t\tbinaryFileList = [binaryFileList];\n\t\t\t\t}\n\t\t\t\tbinaryFileService.initUrlForBinaryFiles(binaryFileList).then(function() {\n\t\t\t\t\tif (attrs.output) {\n\t\t\t\t\t\t$parse(attrs.output).assign(scope, binaryFileList);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tscope.$watch(attrs.input, function() {\n\t\t\t\tvar binaryFileList = $parse(attrs.input)(scope);\n\t\t\t\tif (binaryFileList) {\n\t\t\t\t\tupdateOutput(binaryFileList);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').directive('dsLanguage', [\"$parse\", \"language\", function($parse, language) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\tlanguage.getAll().then(function(languages) {\n\t\t\t\t$parse(attrs.data).assign(scope, languages);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').directive('dsPrincipalIdentity', [\"$rootScope\", \"$parse\", \"principalService\", function($rootScope, $parse, principalService) {\n\treturn {\n\t\tscope: false,\n\t\tlink: function(scope, element, attrs) {\n\t\t\t$rootScope.$on('principal-new', function(event, data) {\n\t\t\t\t$parse(attrs.data).assign(scope, data.principal);\n\t\t\t});\n\t\t\t$rootScope.$on('principal-remove', function() {\n\t\t\t\t$parse(attrs.data).assign(scope, undefined);\n\t\t\t});\n\t\t\tprincipalService.getPrincipal().then(function(principal) {\n\t\t\t\t$parse(attrs.data).assign(scope, principal);\n\t\t\t});\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('authExpiredInterceptor', [\"$injector\", \"$q\", \"adamaConstant\", function($injector, $q, adamaConstant) {\n\tvar getHttpService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('$http'));\n\t\t};\n\t}());\n\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\tvar getStateService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('$state'));\n\t\t};\n\t}());\n\n\treturn {\n\t\tresponseError: function(response) {\n\t\t\tvar config = response.config;\n\t\t\tif (response.status === 401 && config.url.indexOf(adamaConstant.apiBase) === 0) {\n\t\t\t\tconsole.log('authExpiredInterceptor error 401, refresh token', config.url);\n\t\t\t\treturn getAdamaTokenService().refreshAndGetToken().then(function() {\n\t\t\t\t\tconsole.log('authExpiredInterceptor token is refresh, reset Authorization header');\n\t\t\t\t\tconfig.headers['Authorization'] = undefined;\n\t\t\t\t\treturn getHttpService()(config);\n\t\t\t\t}, function(rejection) {\n\t\t\t\t\treturn getStateService().go('auth.signin').then(function() {\n\t\t\t\t\t\tconsole.log('authExpiredInterceptor error while getting user token', rejection);\n\t\t\t\t\t\treturn $q.reject(rejection);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn $q.reject(response);\n\t\t}\n\t};\n}]);\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('authInterceptor', [\"$injector\", \"$q\", \"adamaConstant\", function($injector, $q, adamaConstant) {\n\tvar getAdamaTokenService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('adamaTokenService'));\n\t\t};\n\t}());\n\n\tvar getStateService = (function() {\n\t\tvar service;\n\t\treturn function() {\n\t\t\treturn service || (service = $injector.get('$state'));\n\t\t};\n\t}());\n\n\treturn {\n\t\t// Add authorization token to headers\n\t\trequest: function(config) {\n\t\t\tconsole.log('authInterceptor', config.url);\n\t\t\tconfig.headers = config.headers || {};\n\t\t\tif (!config.headers['Authorization'] && config.url.indexOf(adamaConstant.apiBase) === 0) {\n\t\t\t\tconsole.log('authInterceptor need authorization, getting token');\n\t\t\t\treturn getAdamaTokenService().getToken().then(function(token) {\n\t\t\t\t\tconsole.log('authInterceptor adding Authorization header', token);\n\t\t\t\t\tif (token) {\n\t\t\t\t\t\tconfig.headers['Authorization'] = 'Bearer ' + token;\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t}, function(rejection) {\n\t\t\t\t\treturn getStateService().go('auth.signin').then(function() {\n\t\t\t\t\t\tconsole.log('authInterceptor error while getting user token', rejection);\n\t\t\t\t\t\treturn $q.reject(rejection);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn config;\n\t\t}\n\t};\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('User', [\"$resource\", \"adamaConstant\", \"adamaResourceConfig\", function($resource, adamaConstant, adamaResourceConfig) {\n\tvar config = angular.extend({}, adamaResourceConfig, {\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tid: '@id'\n\t\t\t}\n\t\t}\n\t});\n\treturn $resource(adamaConstant.apiBase + 'users/:id', {}, config);\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('adamaResourceConfig', [\"ParseLinks\", function(ParseLinks) {\n\treturn {\n\t\t'query': {\n\t\t\tmethod: 'GET',\n\t\t\tisArray: true,\n\t\t\ttransformResponse: function(data, headers, status) {\n\t\t\t\tdata = angular.fromJson(data);\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tdata.$metadata = {\n\t\t\t\t\t\tlinks: ParseLinks.parse(headers('link')),\n\t\t\t\t\t\ttotalItems: headers('X-Total-Count')\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t},\n\t\t\tinterceptor: {\n\t\t\t\tresponse: function(response) {\n\t\t\t\t\tresponse.resource.$metadata = response.data.$metadata;\n\t\t\t\t\treturn response.resource;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'get': {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\t'save': {\n\t\t\tmethod: 'POST'\n\t\t},\n\t\t'update': {\n\t\t\tmethod: 'PUT'\n\t\t},\n\t\t'delete': {\n\t\t\tmethod: 'DELETE',\n\t\t\tparams: {\n\t\t\t\tid: '@id'\n\t\t\t}\n\t\t}\n\t};\n}]);\n","/* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n/* jshint camelcase:false */\n\n'use strict';\n\nangular.module('adama-mobile').factory('adamaTokenService', [\"$rootScope\", \"$http\", \"$q\", \"$state\", \"$ionicUser\", \"jwtHelper\", \"adamaConstant\", function($rootScope, $http, $q, $state, $ionicUser, jwtHelper, adamaConstant) {\n\tvar api = {};\n\n\tvar ionicUser = $ionicUser.current();\n\t$rootScope.$on('ionicuser-new', function() {\n\t\tconsole.log('adamaTokenService update ionicUser');\n\t\tionicUser = $ionicUser.current();\n\t});\n\n\tapi.getToken = function() {\n\t\tconsole.log('adamaTokenService.getToken');\n\t\tvar token;\n\t\tif (ionicUser.isAuthenticated()) {\n\t\t\tconsole.log('adamaTokenService.getToken user is authenticated');\n\t\t\ttoken = ionicUser.get('access_token');\n\t\t\tif (token && jwtHelper.isTokenExpired(token)) {\n\t\t\t\tconsole.log('adamaTokenService.getToken token is expired');\n\t\t\t\treturn api.refreshAndGetToken();\n\t\t\t}\n\t\t}\n\t\treturn $q.when(token);\n\t};\n\n\tapi.refreshAndGetToken = function() {\n\t\tconsole.log('adamaTokenService.refreshAndGetToken');\n\t\tvar token = ionicUser.get('access_token');\n\t\tif (!token) {\n\t\t\t// FIXME should not occur as ionicUser should always have a\n\t\t\t// access_token\n\t\t\tconsole.error('no token, redirect to signin');\n\t\t\tconsole.log('for debugging purpose, here is the ionic current user', ionicUser);\n\t\t\tconsole.log('for debugging purpose, here is the ionic current user.isAuthenticated', ionicUser.isAuthenticated());\n\t\t\tconsole.log('for debugging purpose, here is a JSON.stringify version of ionic current user', JSON.stringify(ionicUser));\n\t\t\treturn $q.reject('refreshAndGetToken : no token !!!!');\n\t\t}\n\t\tconsole.log('adamaTokenService.refreshAndGetToken token', token);\n\t\tvar refreshToken = ionicUser.get('refresh_token');\n\t\tconsole.log('adamaTokenService.refreshAndGetToken refreshToken', refreshToken);\n\t\treturn $http({\n\t\t\tmethod: 'POST',\n\t\t\turl: adamaConstant.apiBase + 'login/refresh',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t'refresh_token': refreshToken\n\t\t\t}\n\t\t}).then(function(response) {\n\t\t\tvar newToken = response.data.access_token;\n\t\t\tconsole.log('adamaTokenService.refreshAndGetToken newToken', newToken);\n\t\t\tionicUser.set('access_token', newToken);\n\t\t\treturn ionicUser.save().then(function() {\n\t\t\t\treturn newToken;\n\t\t\t});\n\t\t}, function(rejection) {\n\t\t\tconsole.error('error while refreshing user token, redirect to signin', rejection);\n\t\t\treturn $q.reject(rejection);\n\t\t});\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').constant('adamaConstant', {\n\tapiBase: 'http://localhost:13337/',\n\tadamaMobileToolkitTemplateUrl: {\n\t\tapp: 'adama-mobile/app.html',\n\t\tauthAccessDenied: 'adama-mobile/auth/accessDenied.html',\n\t\tauthSignin: 'adama-mobile/auth/signin.html',\n\t\tauthRecover: 'adama-mobile/auth/recoverPassword.html'\n\t},\n\tenableBadge: false,\n\tenablePush: false,\n\turlResetPassword: 'path/to/reset/password?origin=mobile'\n});\n","'use strict';\n\nangular.module('adama-mobile').factory('authService', [\"$rootScope\", \"$http\", \"$ionicAuth\", \"adamaConstant\", \"principalService\", function($rootScope, $http, $ionicAuth, adamaConstant, principalService) {\n\tvar api = {};\n\n\tapi.login = function(username, password) {\n\t\tconsole.log('login', username);\n\t\tvar authOptions = {\n\t\t\tremember: true\n\t\t};\n\t\tvar data = {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t};\n\t\treturn $ionicAuth.login('custom', authOptions, data).then(function() {\n\t\t\tconsole.log('login is ok, ask custom auth server to refresh the user data');\n\t\t\treturn $http({\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: adamaConstant.apiBase + 'externalLogin/refreshUserExternal',\n\t\t\t\tdata: {\n\t\t\t\t\texternalId: username\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(function() {\n\t\t\tconsole.log('refreshing custom auth server is ok, ask the backend for the updated user info');\n\t\t\t$rootScope.$broadcast('ionicuser-new');\n\t\t\t// get the new user information from ionic\n\t\t\treturn principalService.resetPrincipal();\n\t\t}).then(function() {\n\t\t\tconsole.log('user is logged in in both ionic and backend');\n\t\t});\n\t};\n\n\tapi.logout = function() {\n\t\tconsole.log('logout');\n\t\t$ionicAuth.logout();\n\t\tprincipalService.deletePrincipal();\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('binaryFileService', [\"$http\", \"$q\", \"adamaConstant\", function($http, $q, adamaConstant) {\n\tvar api = {};\n\n\tapi.initUrlForBinaryFiles = function(binaryFileList) {\n\t\tvar workingList = [];\n\t\tvar idList = [];\n\t\tangular.forEach(binaryFileList, function(binaryFile) {\n\t\t\tif (binaryFile && binaryFile.id && !binaryFile.url) {\n\t\t\t\tworkingList.push(binaryFile);\n\t\t\t\tidList.push(binaryFile.id);\n\t\t\t}\n\t\t});\n\t\tif (idList.length) {\n\t\t\treturn $http({\n\t\t\t\tmethod: 'PUT',\n\t\t\t\turl: adamaConstant.apiBase + 'files',\n\t\t\t\tdata: angular.toJson(idList)\n\t\t\t}).then(function(response) {\n\t\t\t\tangular.forEach(workingList, function(binaryFile) {\n\t\t\t\t\tbinaryFile.url = response.data.urlList[binaryFile.id];\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn $q.when();\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').provider('language', function() {\n\tvar languages = ['en', 'fr'];\n\tvar selectorData = [{\n\t\tcode: 'en',\n\t\tlabelKey: 'FLAG_EN',\n\t\tcssCLass: 'us'\n\t}, {\n\t\tcode: 'fr',\n\t\tlabelKey: 'FLAG_FR',\n\t\tcssCLass: 'fr'\n\t}];\n\n\tthis.setLanguages = function(newLanguages) {\n\t\tlanguages = newLanguages;\n\t};\n\n\tthis.setSelectorData = function(newSelectorData) {\n\t\tselectorData = newSelectorData;\n\t};\n\n\tthis.$get = [\"$q\", \"$http\", \"$translate\", function($q, $http, $translate) {\n\t\tvar api = {};\n\n\t\tapi.getCurrent = function() {\n\t\t\tvar language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\t\t\tif (angular.isUndefined(language)) {\n\t\t\t\tlanguage = 'en';\n\t\t\t}\n\t\t\treturn $q.when(language);\n\t\t};\n\n\t\tapi.getAll = function() {\n\t\t\treturn $q.when(languages);\n\t\t};\n\n\t\tapi.getSelectorData = function() {\n\t\t\treturn $q.when(selectorData);\n\t\t};\n\n\t\treturn api;\n\t}];\n});\n","'use strict';\n\nangular.module('adama-mobile').factory('loadingService', [\"$filter\", \"$ionicLoading\", function($filter, $ionicLoading) {\n\tvar api = {};\n\tvar translateFn = $filter('translate');\n\n\tapi.blockUiWhileResolving = function(messageKey, promise) {\n\t\tif (promise.$$state.status === 0) {\n\t\t\t$ionicLoading.show({\n\t\t\t\ttemplate: translateFn(messageKey)\n\t\t\t});\n\t\t}\n\t\treturn promise.finally(function() {\n\t\t\t$ionicLoading.hide();\n\t\t});\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('notificationsService', [\"$filter\", \"$cordovaToast\", function($filter, $cordovaToast) {\n\tvar api = {};\n\tvar translateFn = $filter('translate');\n\n\tapi.show = function(messageKey) {\n\t\tconsole.log('notifications show', messageKey);\n\t\treturn $cordovaToast.show(translateFn(messageKey), 'short', 'bottom');\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').factory('pageTitle', [\"$rootScope\", \"$filter\", function($rootScope, $filter) {\n\tvar translateFn = $filter('translate');\n\tvar api = {};\n\n\tapi.set = function(pageTitleKey, data) {\n\t\tvar newTitle = translateFn(pageTitleKey, data);\n\t\t$rootScope.pageTitle = newTitle;\n\t};\n\n\treturn api;\n}]);\n","'use strict';\n\nangular.module('adama-mobile').service('ParseLinks', function() {\n\tthis.parse = function(header) {\n\t\tif (header.length === 0) {\n\t\t\tthrow new Error('input must not be of zero length');\n\t\t}\n\n\t\t// Split parts by comma\n\t\tvar parts = header.split(',');\n\t\tvar links = {};\n\t\t// Parse each part into a named link\n\t\tangular.forEach(parts, function(p) {\n\t\t\tvar section = p.split(';');\n\t\t\tif (section.length !== 2) {\n\t\t\t\tthrow new Error('section could not be split on \";\"');\n\t\t\t}\n\t\t\tvar url = section[0].replace(/<(.*)>/, '$1').trim();\n\t\t\tvar queryString = {};\n\t\t\turl.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), function($0, $1, $2, $3) {\n\t\t\t\tqueryString[$1] = $3;\n\t\t\t});\n\t\t\tvar page = queryString.page;\n\t\t\tif (angular.isString(page)) {\n\t\t\t\tpage = parseInt(page);\n\t\t\t}\n\t\t\tvar name = section[1].replace(/rel='(.*)'/, '$1').trim();\n\t\t\tlinks[name] = page;\n\t\t});\n\n\t\treturn links;\n\t};\n});\n","/*jshint -W069 */\n/*jscs:disable requireDotNotation*/\n'use strict';\n\nangular.module('adama-mobile').factory('principalService', [\"$rootScope\", \"$q\", \"$http\", \"$resource\", \"$state\", \"$ionicUser\", \"adamaConstant\", function($rootScope, $q, $http, $resource, $state, $ionicUser, adamaConstant) {\n\tvar api = {};\n\tvar principalPromise;\n\tvar ionicUser = $ionicUser.current();\n\tvar isAuthenticated = ionicUser.isAuthenticated();\n\tvar accountResource = $resource(adamaConstant.apiBase + 'account', {}, {});\n\tvar passwordResource = $resource(adamaConstant.apiBase + 'account/change_password', {}, {});\n\tvar passwordResetInitResource = $resource(adamaConstant.apiBase + 'account/reset_password/init', {}, {});\n\n\tapi.isAuthenticated = function() {\n\t\treturn isAuthenticated;\n\t};\n\n\tapi.resetPrincipal = function() {\n\t\tvar result;\n\t\tionicUser = $ionicUser.current();\n\t\tisAuthenticated = ionicUser.isAuthenticated();\n\t\tconsole.log('resetPrincipal');\n\t\tconsole.log('resetPrincipal ionicUser', ionicUser);\n\t\tconsole.log('resetPrincipal isAuthenticated', isAuthenticated);\n\t\tif (isAuthenticated) {\n\t\t\tvar externalId = ionicUser.details['external_id'];\n\t\t\tif (!externalId) {\n\t\t\t\t// FIXME should not occur, every ionicuser should have an\n\t\t\t\t// external_id\n\t\t\t\tconsole.error('no external_id, redirect to signin');\n\t\t\t\tresult = $q.reject('resetPrincipal : no external_id');\n\t\t\t} else {\n\t\t\t\tprincipalPromise = $http({\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: adamaConstant.apiBase + 'users/byLogin/' + externalId\n\t\t\t\t}).then(function(response) {\n\t\t\t\t\tvar principal = response.data;\n\t\t\t\t\tisAuthenticated = true;\n\t\t\t\t\t$rootScope.$broadcast('principal-new', {\n\t\t\t\t\t\tprincipal: principal\n\t\t\t\t\t});\n\t\t\t\t\treturn principal;\n\t\t\t\t});\n\t\t\t\tresult = principalPromise;\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.error('user is not authenticated');\n\t\t\tresult = $q.reject('resetPrincipal : not authenticated');\n\t\t}\n\t\treturn result.catch(function(rejection) {\n\t\t\tconsole.log('there was a problem while reseting user info, redirect to signin');\n\t\t\tisAuthenticated = false;\n\t\t\tprincipalPromise = undefined;\n\t\t\t$state.go('auth.signin');\n\t\t\treturn $q.reject(rejection);\n\t\t});\n\t};\n\n\tapi.getPrincipal = function() {\n\t\tif (!principalPromise) {\n\t\t\treturn api.resetPrincipal();\n\t\t}\n\t\treturn principalPromise;\n\t};\n\n\tapi.deletePrincipal = function() {\n\t\tisAuthenticated = false;\n\t\tprincipalPromise = undefined;\n\t\t$rootScope.$broadcast('principal-remove');\n\t};\n\n\tapi.hasAnyAuthority = function(authorities) {\n\t\tconsole.log('hasAnyAuthority', authorities);\n\t\t// TODO\n\t\treturn true;\n\t};\n\n\tapi.resetPasswordInit = function(mail) {\n\t\tconsole.log('resetPasswordInit', mail);\n\t\treturn passwordResetInitResource.save({\n\t\t\tmail: mail,\n\t\t\turlResetPassword: adamaConstant.urlResetPassword\n\t\t}).$promise;\n\t};\n\n\tapi.updateAccount = function(principal) {\n\t\tconsole.log('updateAccount', principal);\n\t\treturn accountResource.save(principal, function() {\n\t\t\t$rootScope.$emit('principal-update', {\n\t\t\t\tprincipal: principal\n\t\t\t});\n\t\t\tprincipalPromise = $q.when(principal);\n\t\t}).$promise;\n\t};\n\n\tapi.changePassword = function(newPassword) {\n\t\tconsole.log('changePassword');\n\t\treturn passwordResource.save({\n\t\t\tpassword: newPassword\n\t\t}).$promise;\n\t};\n\n\treturn api;\n}]);\n"],"sourceRoot":"/source/"}